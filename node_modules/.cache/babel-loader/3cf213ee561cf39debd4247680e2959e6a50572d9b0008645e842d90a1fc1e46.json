{"ast":null,"code":"import axios from \"axios\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"UserProducts\",\n  data() {\n    return {\n      userProducts: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"getToken\"])\n  },\n  methods: {\n    async fetchUserProducts() {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/user/products\",\n        // Update with your backend URL\n        {\n          headers: {\n            Authorization: `Bearer ${this.getToken}`\n          }\n        });\n        this.userProducts = response.data.products;\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchUserProducts();\n  }\n};","map":{"version":3,"names":["axios","mapGetters","name","data","userProducts","computed","methods","fetchUserProducts","response","get","headers","Authorization","getToken","products","error","console","mounted"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\rex.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>My Products</h2>\r\n    <div v-if=\"userProducts.length\">\r\n      <div\r\n        v-for=\"product in userProducts\"\r\n        :key=\"product._id\"\r\n        class=\"product-card\"\r\n      >\r\n        <h3>{{ product.title }}</h3>\r\n        <p>Brand: {{ product.brand }}</p>\r\n        <p>Availability: {{ product.availability ? 'Available' : 'Out of stock' }}</p>\r\n        <p>Views: {{ product.views }}</p>\r\n        <p>Likes: {{ product.likes }}</p>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <p>No products found.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"UserProducts\",\r\n\r\n  data() {\r\n    return {\r\n      userProducts: [],\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\"getToken\"]),\r\n  },\r\n\r\n  methods: {\r\n    async fetchUserProducts() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:5000/api/user/products\", // Update with your backend URL\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${this.getToken}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        this.userProducts = response.data.products;\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.fetchUserProducts();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-card {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border-radius: 5px;\r\n}\r\n</style>\r\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAI,EAAE,cAAc;EAEpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACR,GAAGJ,UAAU,CAAC,CAAC,UAAU,CAAC;EAC5B,CAAC;EAEDK,OAAO,EAAE;IACP,MAAMC,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAC9B,yCAAyC;QAAE;QAC3C;UACEC,OAAO,EAAE;YACPC,aAAa,EAAG,UAAS,IAAI,CAACC,QAAS;UACzC;QACF,CACF,CAAC;QAED,IAAI,CAACR,YAAW,GAAII,QAAQ,CAACL,IAAI,CAACU,QAAQ;MAC5C,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF,CAAC;EAEDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,iBAAiB,CAAC,CAAC;EAC1B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}