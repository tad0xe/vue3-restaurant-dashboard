{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'Orders',\n  data() {\n    return {\n      orders: [],\n      loading: true,\n      error: null\n    };\n  },\n  mounted() {\n    this.fetchOrders();\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        const response = await axios.get('http://localhost:4000/api/all-orders'); // update with your actual backend URL\n        this.orders = response.data.orders;\n      } catch (err) {\n        this.error = 'Failed to fetch orders';\n        console.error(err);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","orders","loading","error","mounted","fetchOrders","methods","response","get","err","console"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\rex.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n        <div class=\"filter row align-items-center\">\r\n          <div class=\"col-auto\">\r\n            <label for=\"statusFilter\">Filter by Status:</label>\r\n          </div>\r\n          <div class=\"col-auto\">\r\n            <select\r\n              id=\"statusFilter\"\r\n              v-model=\"selectedStatus\"\r\n              @change=\"applyFilters\"\r\n              class=\"form-select\"\r\n            >\r\n              <option value=\"\">All</option>\r\n              <option value=\"New Order\">New Order</option>\r\n              <option value=\"on Delivery\">On Delivery</option>\r\n              <option value=\"delivered\">Delivered</option>\r\n              <option value=\"cancelled\">Cancelled</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-auto\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              v-model=\"searchQuery\"\r\n              placeholder=\"Search by Order ID\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"table-container\">\r\n          <table class=\"custom-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Order ID</th>\r\n                <th>Date</th>\r\n                <th>name of event</th>\r\n                <th>Customer Name</th>\r\n                <th>Phone number</th>\r\n                <th>Amount</th>\r\n\r\n                <th>Ticket type</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"\">\r\n              <tr v-for=\"(order, index) in orders\" :key=\"order._id\">\r\n                <td>{{ order._id }}</td>\r\n                <td>{{ new Date(order.createdAt).toLocaleString() }}</td>\r\n                <td>{{ order.title }}</td>\r\n                <td>{{ order.contact?.email || \"N/A\" }}</td>\r\n                <td>{{ order.contact?.phone || \"N/A\" }}</td>\r\n                <td>${{ order.price }}</td>\r\n                <td>\r\n                  <div v-for=\"ticket in order.tickets\" :key=\"ticket._id\">\r\n                    {{ ticket.name }} x {{ ticket.quantity }}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"pagination\">\r\n          <button\r\n            class=\"pagination-btn\"\r\n            :disabled=\"currentPage === 1\"\r\n            @click=\"prevPage\"\r\n          >\r\n            Previous\r\n          </button>\r\n          <button\r\n            v-for=\"page in totalPages\"\r\n            :key=\"page\"\r\n            class=\"pagination-btn\"\r\n            :class=\"{ active: currentPage === page }\"\r\n            @click=\"changePage(page)\"\r\n          >\r\n            {{ page }}\r\n          </button>\r\n          <button\r\n            class=\"pagination-btn\"\r\n            :disabled=\"currentPage === totalPages\"\r\n            @click=\"nextPage\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'Orders',\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  },\r\n  methods: {\r\n    async fetchOrders() {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/api/all-orders'); // update with your actual backend URL\r\n        this.orders = response.data.orders;\r\n      } catch (err) {\r\n        this.error = 'Failed to fetch orders';\r\n        console.error(err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.custom-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.custom-table th,\r\n.custom-table td {\r\n  padding: 10px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.custom-table th {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.custom-table td button {\r\n  padding: 5px 10px;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.custom-table td .dropdown-menu {\r\n  margin-top: 5px;\r\n}\r\n\r\n.custom-table td .dropdown-menu button {\r\n  width: 100%;\r\n  text-align: left;\r\n}\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.pagination button {\r\n  border: 1px solid #ccc;\r\n  background-color: #fff;\r\n  color: #000;\r\n  padding: 5px 10px;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination button.active {\r\n  background-color: #f4a213;\r\n  color: #fff;\r\n}\r\n\r\n.filter {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.filter label {\r\n  margin-right: 5px;\r\n}\r\n.table-container {\r\n  overflow-x: auto;\r\n}\r\n\r\n.scrollable-tbody {\r\n  display: block;\r\n  white-space: nowrap;\r\n}\r\n</style>"],"mappings":"AA6FA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,sCAAsC,CAAC,EAAE;QAC1E,IAAI,CAACP,MAAK,GAAIM,QAAQ,CAACP,IAAI,CAACC,MAAM;MACpC,EAAE,OAAOQ,GAAG,EAAE;QACZ,IAAI,CAACN,KAAI,GAAI,wBAAwB;QACrCO,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;MACpB,UAAU;QACR,IAAI,CAACP,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}