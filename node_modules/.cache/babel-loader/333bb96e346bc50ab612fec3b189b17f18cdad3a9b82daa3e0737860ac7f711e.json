{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { QuillEditor } from \"@vueup/vue-quill\";\nimport \"@vueup/vue-quill/dist/vue-quill.snow.css\";\nimport { mapActions } from \"vuex\";\nimport Swal from \"sweetalert2\";\nexport default {\n  components: {\n    QuillEditor\n  },\n  data() {\n    return {\n      steps: [\"Details\", \"Location\", \"Images\", \"Pricing\"],\n      currentStep: 0,\n      categories: [],\n      // Form fields\n      title: \"\",\n      previewUrl: null,\n      price: null,\n      description: \"\",\n      location: \"\",\n      isVirtual: false,\n      eventType: \"single\",\n      // or 'recurring'\n      timezone: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      startTime: \"12:00\",\n      endTime: \"12:00\",\n      startAmPm: \"AM\",\n      endAmPm: \"AM\",\n      eventFrequency: \"Every day\",\n      tickets: [{\n        name: \"\",\n        quantity: \"Unlimited\",\n        price: \"Cost\"\n      }, {\n        name: \"\",\n        quantity: \"Unlimited\",\n        price: \"Free\"\n      }]\n    };\n  },\n  methods: {\n    ...mapActions([\"createProduct\"]),\n    addTicket(type) {\n      const defaultPrice = type === \"Paid\" ? \"Cost\" : type === \"Donation\" ? \"Any\" : \"Free\";\n      this.tickets.push({\n        name: \"\",\n        quantity: \"Unlimited\",\n        price: defaultPrice\n      });\n    },\n    removeTicket(index) {\n      this.tickets.splice(index, 1);\n    },\n    duplicateTicket(index) {\n      const ticket = this.tickets[index];\n      this.tickets.splice(index + 1, 0, {\n        ...ticket\n      });\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.previewUrl = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    nextStep() {\n      if (this.currentStep < this.steps.length - 1) this.currentStep++;\n    },\n    prevStep() {\n      if (this.currentStep > 0) this.currentStep--;\n    },\n    mounted() {\n      try {\n        const fileInput = this.$refs.fileInput;\n        if (fileInput?.files?.length) {\n          for (let i = 0; i < fileInput.files.length; i++) {\n            formData.append(\"photos\", fileInput.files[i]);\n          }\n        }\n      } catch (err) {\n        console.warn(\"File input error:\", err);\n      }\n      try {\n        const response = axios.get(\"http://localhost:4000/api/categories\");\n        this.categories = response.data.categories;\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    },\n    async handleSubmit() {\n      const fileInput = this.$refs.fileInput;\n      const formData = new FormData();\n      formData.append(\"title\", this.title);\n      formData.append(\"description\", this.description);\n      formData.append(\"price\", this.price);\n      formData.append(\"location\", this.location);\n      formData.append(\"isVirtual\", this.isVirtual);\n      if (fileInput && fileInput.files.length > 0) {\n        for (let i = 0; i < fileInput.files.length; i++) {\n          formData.append(\"photos\", fileInput.files[i]);\n        }\n      }\n      try {\n        await this.createProduct(formData);\n        Swal.fire(\"Success\", \"Product created!\", \"success\");\n      } catch (error) {\n        console.error(\"Product creation failed:\", error);\n        Swal.fire(\"Error\", \"Failed to create product\", \"error\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["QuillEditor","mapActions","Swal","components","data","steps","currentStep","categories","title","previewUrl","price","description","location","isVirtual","eventType","timezone","startDate","endDate","startTime","endTime","startAmPm","endAmPm","eventFrequency","tickets","name","quantity","methods","addTicket","type","defaultPrice","push","removeTicket","index","splice","duplicateTicket","ticket","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","nextStep","length","prevStep","mounted","fileInput","$refs","i","formData","append","err","console","warn","response","axios","get","error","handleSubmit","FormData","createProduct","fire"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\app\\addProduct.vue"],"sourcesContent":["<template>\r\n  <div class=\" \">\r\n    <!-- Stepper -->\r\n    <div class=\"stepper pt-2 mx-auto\">\r\n      <div\r\n        v-for=\"(step, index) in steps\"\r\n        :key=\"index\"\r\n        class=\"step\"\r\n        :class=\"{\r\n          active: currentStep === index,\r\n          completed: index < currentStep,\r\n        }\"\r\n      >\r\n        <div class=\"circle\">\r\n          <span v-if=\"index < currentStep\">âœ”</span>\r\n          <span v-else>{{ index + 1 }}</span>\r\n        </div>\r\n        <div class=\"label\">{{ step }}</div>\r\n      </div>\r\n      <div class=\"progress-line\">\r\n        <div\r\n          class=\"progress-fill\"\r\n          :style=\"{ width: (currentStep / (steps.length - 1)) * 100 + '%' }\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Form -->\r\n      <div class=\"row justify-content-center\">\r\n    <div class=\"col-12 col-md-9 col-lg-6\">\r\n      <form @submit.prevent=\"handleSubmit\" class=\"shadow p-4 w-md-75  mx-auto w-100\">\r\n        <!-- STEP 1: Basic Info -->\r\n        <div class=\"\" v-if=\"currentStep === 0\">\r\n          <div class=\"row\">\r\n            <div class=\"mb-3 col-md-6\">\r\n              <label for=\"title\" class=\"form-label\"\r\n                >What is your event name:</label\r\n              >\r\n              <input\r\n                v-model=\"title\"\r\n                type=\"text\"\r\n                id=\"title\"\r\n                class=\"form-control\"\r\n              />\r\n            </div>\r\n            <div class=\"mb-3 col-md-6\">\r\n              <label for=\"price\" class=\"form-label\">Price:</label>\r\n              <input\r\n                v-model=\"price\"\r\n                type=\"number\"\r\n                id=\"price\"\r\n                class=\"form-control\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Event Category</label>\r\n            <div>\r\n              <select class=\"form-select\" v-model=\"categoryID\">\r\n                 <option value=\"\" disabled>Select a category</option>\r\n          <option v-for=\"category in categories\" :key=\"category._id\" :value=\"category._id\">\r\n            {{ category.type }}\r\n          </option>\r\n                <!-- Add more as needed -->\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">What's your event about:</label>\r\n            <QuillEditor\r\n              v-model=\"description\"\r\n              theme=\"snow\"\r\n              style=\"height: 300px\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- STEP 2: Description -->\r\n        <div v-if=\"currentStep === 1\">\r\n          <div class=\"mt-4 text-start\">\r\n            <h4><strong>When is your event?</strong></h4>\r\n            <p class=\"text-muted\">Select all the dates of your event</p>\r\n\r\n            <!-- Toggle Buttons -->\r\n            <div class=\"btn-group mb-3\" role=\"group\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn\"\r\n                :class=\"\r\n                  eventType === 'single'\r\n                    ? 'btn-primary active'\r\n                    : 'btn-outline-secondary'\r\n                \"\r\n                @click=\"eventType = 'single'\"\r\n              >\r\n                Single Event\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn\"\r\n                :class=\"\r\n                  eventType === 'recurring'\r\n                    ? 'btn-primary active'\r\n                    : 'btn-outline-secondary'\r\n                \"\r\n                @click=\"eventType = 'recurring'\"\r\n              >\r\n                Recurring Event\r\n              </button>\r\n            </div>\r\n\r\n            <!-- Time Zone -->\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">* Select time zone</label>\r\n              <select class=\"form-select\" v-model=\"timezone\">\r\n                <option value=\"\">Select Time Zone</option>\r\n                <option value=\"UTC+01:00\">\r\n                  (UTC+01:00) West Central Africa\r\n                </option>\r\n                <option value=\"UTC+00:00\">(UTC+00:00) GMT</option>\r\n                <option value=\"UTC-05:00\">\r\n                  (UTC-05:00) Eastern Time (US & Canada)\r\n                </option>\r\n                <!-- Add more as needed -->\r\n              </select>\r\n            </div>\r\n\r\n            <!-- Start/End Date and Time -->\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label class=\"form-label\">* Start date</label>\r\n                <input type=\"date\" class=\"form-control\" v-model=\"startDate\" />\r\n              </div>\r\n              <div class=\"col-md-6 mb-3\" v-if=\"eventType === 'single'\">\r\n                <label class=\"form-label\">* End date</label>\r\n                <input type=\"date\" class=\"form-control\" v-model=\"endDate\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label class=\"form-label\">Start time</label>\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div class=\"mt-2\">\r\n                    <input\r\n                      type=\"time\"\r\n                      class=\"form-control\"\r\n                      v-model=\"startTime\"\r\n                    />\r\n                  </div>\r\n\r\n                  <select class=\"form-select w-md-50\" v-model=\"startAmPm\">\r\n                    <option>AM</option>\r\n                    <option>PM</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label class=\"form-label\">End time</label>\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div class=\"mt-2\">\r\n                    <input type=\"time\" class=\"form-control\" v-model=\"endTime\" />\r\n                  </div>\r\n\r\n                  <select class=\"form-select w-md-50\" v-model=\"endAmPm\">\r\n                    <option>AM</option>\r\n                    <option>PM</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Recurring Options -->\r\n              <div class=\"col-md-4 mb-3\" v-if=\"eventType === 'recurring'\">\r\n                <label class=\"form-label\">* Event frequency</label>\r\n                <select class=\"form-select\" v-model=\"eventFrequency\">\r\n                  <option>Every day</option>\r\n                  <option>Weekdays</option>\r\n                  <option>Weekends</option>\r\n                  <option>Every week</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- STEP 3: Media Upload -->\r\n        <div v-if=\"currentStep === 2\">\r\n          <div class=\"container py-5 text-start\">\r\n            <div class=\"row\">\r\n              <!-- Left Column: Event Image -->\r\n              <div class=\"col-md-6\">\r\n                <h5><strong>Event Image</strong></h5>\r\n                <p class=\"text-muted\">Upload a JPEG or PNG file</p>\r\n\r\n                <div\r\n                  class=\"alert alert-light border text-muted py-2 small d-flex align-items-start\"\r\n                >\r\n                  <i class=\"bi bi-info-circle-fill me-2 text-danger\"></i>\r\n                  Images with a 1:1 ratio (a square) work best on all event\r\n                  themes\r\n                </div>\r\n\r\n                <div>\r\n                  <!-- Upload box -->\r\n                  <label\r\n                    for=\"imageUpload\"\r\n                    class=\"border rounded bg-light d-flex flex-column justify-content-center align-items-center text-center py-5 mb-2\"\r\n                    style=\"cursor: pointer\"\r\n                  >\r\n                    <i class=\"bi bi-image fs-1 mb-2\"></i>\r\n                    <span>\r\n                      Drag an image here or\r\n                      <span class=\"text-danger fw-bold\">click to upload</span>\r\n                    </span>\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"imageUpload\"\r\n                      class=\"d-none\"\r\n                      @change=\"handleImageUpload\"\r\n                      accept=\"image/*\"\r\n                      ref=\"fileInput\"\r\n                    />\r\n                  </label>\r\n\r\n                  <!-- Preview -->\r\n                  <div v-if=\"previewUrl\" class=\"text-center mt-3\">\r\n                    <img\r\n                      :src=\"previewUrl\"\r\n                      alt=\"Preview\"\r\n                      class=\"img-fluid rounded shadow\"\r\n                      style=\"max-height: 250px\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <p class=\"text-muted small\">\r\n                  Upload an image with a size less than 2mb\r\n                </p>\r\n              </div>\r\n\r\n              <!-- Right Column: Event Theme -->\r\n              <div class=\"col-md-6\">\r\n                <div class=\"d-flex justify-content-between align-items-center\">\r\n                  <div>\r\n                    <h5><strong>Event Page Theme</strong></h5>\r\n                    <p class=\"text-muted small mb-2\">\r\n                      Select the layout for your event page - it will only take\r\n                      2 minutes\r\n                    </p>\r\n                  </div>\r\n                  <a href=\"#\" class=\"text-decoration-none text-muted small\">\r\n                    <i class=\"bi bi-play-circle\"></i> Preview theme\r\n                  </a>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"border rounded bg-light p-3 d-flex align-items-center\"\r\n                  style=\"cursor: pointer\"\r\n                >\r\n                  <i\r\n                    class=\"bi bi-layout-text-window-reverse fs-3 text-secondary me-3\"\r\n                  ></i>\r\n                  <div>\r\n                    <div class=\"small text-muted\">Theme</div>\r\n                    <div class=\"fw-bold\">Choose theme</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- STEP 4: Location -->\r\n        <div v-if=\"currentStep === 3\">\r\n          <div class=\"my-4 text-start\">\r\n            <h5><strong>Create your ticket types</strong></h5>\r\n            <p class=\"text-danger small\">\r\n              *Please be sure to add taxes on top of ticket prices after this\r\n              event has been created.\r\n            </p>\r\n\r\n            <div class=\"row fw-bold border-bottom pb-2 mb-2\">\r\n              <div class=\"col-md-4\">Ticket name</div>\r\n              <div class=\"col-md-2\">Quantity</div>\r\n              <div class=\"col-md-2\">Price</div>\r\n              <div class=\"col-md-4\">Actions</div>\r\n            </div>\r\n\r\n            <!-- Ticket Rows -->\r\n            <div\r\n              v-for=\"(ticket, index) in tickets\"\r\n              :key=\"index\"\r\n              class=\"row align-items-center mb-2\"\r\n            >\r\n              <div class=\"col-md-4\">\r\n                <input\r\n                  v-model=\"ticket.name\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"e.g. General Admission\"\r\n                />\r\n              </div>\r\n              <div class=\"col-md-2\">\r\n                <input\r\n                  v-model=\"ticket.quantity\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Unlimited\"\r\n                />\r\n              </div>\r\n              <div class=\"col-md-2\">\r\n                <input\r\n                  v-model=\"ticket.price\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Free\"\r\n                />\r\n              </div>\r\n              <div class=\"col-md-4 d-flex pt-2 gap-3\">\r\n                <button class=\"btn btn-outline-secondary\" title=\"Settings\">\r\n                  <i class=\"bi bi-gear\"></i>\r\n                </button>\r\n                <button\r\n                  class=\"btn btn-primary btn-primary:hover\"\r\n                  title=\"Duplicate\"\r\n                  @click=\"duplicateTicket(index)\"\r\n                >\r\n                  <i class=\"bi bi-files\"></i>\r\n                </button>\r\n                <button\r\n                  class=\"btn btn-outline-danger\"\r\n                  title=\"Delete\"\r\n                  @click=\"removeTicket(index)\"\r\n                >\r\n                  <i class=\"bi bi-trash\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Timeslot Capacity -->\r\n            <div class=\"row my-4 align-items-center\">\r\n              <div class=\"col-md-4 fw-bold\">Timeslot capacity</div>\r\n              <div class=\"col-md-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Unlimited\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Add Ticket Buttons -->\r\n            <div class=\"d-flex gap-3\">\r\n              <button\r\n                class=\"btn btn-primary btn-primary:hover\"\r\n                type=\"button\"\r\n                @click=\"addTicket('Paid')\"\r\n              >\r\n                + Paid ticket\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-primary btn-primary:hover\"\r\n                type=\"button\"\r\n                @click=\"addTicket('Free')\"\r\n              >\r\n                + Free ticket\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-primary btn-primary:hover\"\r\n                type=\"button\"\r\n                @click=\"addTicket('Donation')\"\r\n              >\r\n                + Donation\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Buttons -->\r\n        <div class=\"text-center mt-4 d-flex justify-content-between\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-danger\"\r\n            @click=\"prevStep\"\r\n            :disabled=\"currentStep === 0\"\r\n          >\r\n            Back\r\n          </button>\r\n          <button\r\n            v-if=\"currentStep < steps.length - 1\"\r\n            type=\"button\"\r\n            class=\"btn btn-primary btn-primary:hover\"\r\n            @click=\"nextStep\"\r\n          >\r\n            Next\r\n          </button>\r\n          <button\r\n            v-else\r\n            type=\"submit\"\r\n            class=\"btn btn-primary btn-primary:hover\"\r\n          >\r\n            Create Event\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { QuillEditor } from \"@vueup/vue-quill\";\r\nimport \"@vueup/vue-quill/dist/vue-quill.snow.css\";\r\nimport { mapActions } from \"vuex\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n  components: {\r\n    QuillEditor,\r\n  },\r\n  data() {\r\n    return {\r\n      steps: [\"Details\", \"Location\", \"Images\", \"Pricing\"],\r\n      currentStep: 0,\r\n categories: [],\r\n      // Form fields\r\n      title: \"\",\r\n      previewUrl: null,\r\n      price: null,\r\n      description: \"\",\r\n      location: \"\",\r\n      isVirtual: false,\r\n      eventType: \"single\", // or 'recurring'\r\n      timezone: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      startTime: \"12:00\",\r\n      endTime: \"12:00\",\r\n      startAmPm: \"AM\",\r\n      endAmPm: \"AM\",\r\n      eventFrequency: \"Every day\",\r\n      tickets: [\r\n        { name: \"\", quantity: \"Unlimited\", price: \"Cost\" },\r\n        { name: \"\", quantity: \"Unlimited\", price: \"Free\" },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\"createProduct\"]),\r\n    addTicket(type) {\r\n      const defaultPrice =\r\n        type === \"Paid\" ? \"Cost\" : type === \"Donation\" ? \"Any\" : \"Free\";\r\n      this.tickets.push({\r\n        name: \"\",\r\n        quantity: \"Unlimited\",\r\n        price: defaultPrice,\r\n      });\r\n    },\r\n    removeTicket(index) {\r\n      this.tickets.splice(index, 1);\r\n    },\r\n    duplicateTicket(index) {\r\n      const ticket = this.tickets[index];\r\n      this.tickets.splice(index + 1, 0, { ...ticket });\r\n    },\r\n\r\n    handleImageUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          this.previewUrl = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    },\r\n\r\n    nextStep() {\r\n      if (this.currentStep < this.steps.length - 1) this.currentStep++;\r\n    },\r\n    prevStep() {\r\n      if (this.currentStep > 0) this.currentStep--;\r\n    },\r\n    mounted() {\r\n      try {\r\n        const fileInput = this.$refs.fileInput;\r\n        if (fileInput?.files?.length) {\r\n          for (let i = 0; i < fileInput.files.length; i++) {\r\n            formData.append(\"photos\", fileInput.files[i]);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.warn(\"File input error:\", err);\r\n      }\r\n       try {\r\n        const response = axios.get(\"http://localhost:4000/api/categories\");\r\n        this.categories = response.data.categories;\r\n      } catch (error) {\r\n        console.error(\"Error fetching categories:\", error);\r\n      }\r\n    },\r\n    async handleSubmit() {\r\n      const fileInput = this.$refs.fileInput;\r\n\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"title\", this.title);\r\n      formData.append(\"description\", this.description);\r\n      formData.append(\"price\", this.price);\r\n      formData.append(\"location\", this.location);\r\n      formData.append(\"isVirtual\", this.isVirtual);\r\n      if (fileInput && fileInput.files.length > 0) {\r\n        for (let i = 0; i < fileInput.files.length; i++) {\r\n          formData.append(\"photos\", fileInput.files[i]);\r\n        }\r\n      }\r\n\r\n      try {\r\n        await this.createProduct(formData);\r\n        Swal.fire(\"Success\", \"Product created!\", \"success\");\r\n      } catch (error) {\r\n        console.error(\"Product creation failed:\", error);\r\n        Swal.fire(\"Error\", \"Failed to create product\", \"error\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-container {\r\n  width: 95%;\r\n  margin: auto;\r\n  margin-top: 30px;\r\n}\r\n\r\n.stepper {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-bottom: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.step {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  flex: 1;\r\n  z-index: 1;\r\n  color: #999;\r\n}\r\n\r\n.step .circle {\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: #ccc;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.step.active .circle {\r\n  background: black;\r\n}\r\n\r\n.step.completed .circle {\r\n  background: #00bfa5;\r\n}\r\n\r\n.step.active {\r\n  color: black;\r\n}\r\n\r\n.step.completed {\r\n  color: #00bfa5;\r\n}\r\n\r\n.label {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n.progress-line {\r\n  position: absolute;\r\n  bottom: 14px;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4px;\r\n  background: #e0e0e0;\r\n  z-index: 0;\r\n}\r\n\r\n.progress-fill {\r\n  height: 4px;\r\n  background: #00bfa5;\r\n  transition: width 0.3s ease-in-out;\r\n  width: 0%;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}