{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"User Details\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.login && $options.login(...args))\n  }, \"Login Using Google\"), $data.userDetails ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, \"Name: \" + _toDisplayString($data.userDetails.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Email: \" + _toDisplayString($data.userDetails.email), 1 /* TEXT */), _createElementVNode(\"p\", null, [_createTextVNode(\"Profile Picture: \"), _createElementVNode(\"img\", {\n    src: $data.userDetails.picture,\n    alt: \"Profile Picture\"\n  }, null, 8 /* PROPS */, _hoisted_3)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","onClick","_cache","args","$options","login","$data","userDetails","_hoisted_1","_hoisted_2","_toDisplayString","name","email","src","picture","alt"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\rex.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button @click=\"login\">Login Using Google</button>\r\n <div v-if=\"userDetails\">\r\n      <h2>User Details</h2>\r\n      <p>Name: {{ userDetails.name }}</p>\r\n      <p>Email: {{ userDetails.email }}</p>\r\n      <p>Profile Picture: <img\r\n          :src=\"userDetails.picture\"\r\n          alt=\"Profile Picture\"\r\n        ></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { googleSdkLoaded } from \"vue3-google-login\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n data() {\r\n    return {\r\n      userDetails: null\r\n    };\r\n  },\r\n  name: \"YourComponent\",\r\n  methods: {\r\n    login() {\r\n      googleSdkLoaded(google => {\r\n        google.accounts.oauth2\r\n          .initCodeClient({\r\n            client_id:\r\n              \"586701-d2i0.apps.googleusercontent.com\",\r\n            scope: \"email profile openid\",\r\n            redirect_uri: \"http://localhost:4000/auth/callback\",\r\n            callback: response => {\r\n              if (response.code) {\r\n                this.sendCodeToBackend(response.code);\r\n              }\r\n            }\r\n          })\r\n          .requestCode();\r\n      });\r\n    },\r\n    async sendCodeToBackend(code) {\r\n      try {\r\n        const response = await axios.post(\r\n          \"https://oauth2.googleapis.com/token\",\r\n          {\r\n            code,\r\n            client_id:\r\n              \"17380556257-79ooh960gmg8t95l65itsu8m57evhb3n.apps.googleusercontent.com\",\r\n            client_secret: \"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\",\r\n            redirect_uri: \"postmessage\",\r\n            grant_type: \"authorization_code\"\r\n          }\r\n        );\r\n\r\n        const accessToken = response.data.access_token;\r\n        console.log(accessToken);\r\n\r\n        // Fetch user details using the access token\r\n        const userResponse = await axios.get(\r\n          \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`\r\n            }\r\n          }\r\n        );\r\n\r\n        if (userResponse && userResponse.data) {\r\n          // Set the userDetails data property to the userResponse object\r\n          this.userDetails = userResponse.data;\r\n        } else {\r\n          // Handle the case where userResponse or userResponse.data is undefined\r\n          console.error(\"Failed to fetch user details.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Token exchange failed:\", error.response.data);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";;;;gCAIMA,mBAAA,CAAqB,YAAjB,cAAY;;;uBAHpBC,mBAAA,CAWM,cAVJD,mBAAA,CAAkD;IAAzCE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;KAAE,oBAAkB,GACjCG,KAAA,CAAAC,WAAW,I,cAAtBP,mBAAA,CAQS,OAAAQ,UAAA,GAPJC,UAAqB,EACrBV,mBAAA,CAAmC,WAAhC,QAAM,GAAAW,gBAAA,CAAGJ,KAAA,CAAAC,WAAW,CAACI,IAAI,kBAC5BZ,mBAAA,CAAqC,WAAlC,SAAO,GAAAW,gBAAA,CAAGJ,KAAA,CAAAC,WAAW,CAACK,KAAK,kBAC9Bb,mBAAA,CAGO,Y,iBAHJ,mBAAiB,GAAAA,mBAAA,CAGjB;IAFEc,GAAG,EAAEP,KAAA,CAAAC,WAAW,CAACO,OAAO;IACzBC,GAAG,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}