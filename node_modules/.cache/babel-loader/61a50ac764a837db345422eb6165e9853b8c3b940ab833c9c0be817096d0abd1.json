{"ast":null,"code":"import { ref, onMounted } from 'vue';\nexport default {\n  __name: 'rex',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const lat = ref(null);\n    const lng = ref(null);\n    const map = ref(null);\n    const loadGoogleMaps = () => {\n      return new Promise((resolve, reject) => {\n        // Check if Google Maps is already loaded\n        if (window.google && window.google.maps) {\n          return resolve(window.google.maps);\n        }\n\n        // Avoid loading script multiple times\n        if (document.getElementById('google-maps-script')) {\n          return reject(new Error('Google Maps script is already loading or failed'));\n        }\n\n        // Load the Google Maps script\n        const script = document.createElement('script');\n        script.id = 'google-maps-script';\n        script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCkbHZXmqyIxjFpN8bMvDeURTmlpEhDHv4`;\n        script.async = true;\n        script.defer = true;\n        script.onload = () => {\n          if (window.google && window.google.maps) {\n            resolve(window.google.maps);\n          } else {\n            reject(new Error('Google Maps failed to load'));\n          }\n        };\n        script.onerror = () => reject(new Error('Failed to load Google Maps'));\n        document.head.appendChild(script);\n      });\n    };\n    onMounted(async () => {\n      try {\n        const maps = await loadGoogleMaps();\n        const googleMap = new maps.Map(map.value, {\n          center: {\n            lat: 0,\n            lng: 0\n          },\n          zoom: 2\n        });\n        googleMap.addListener('click', e => {\n          lat.value = e.latLng.lat();\n          lng.value = e.latLng.lng();\n        });\n      } catch (err) {\n        console.error('Google Maps failed to load:', err.message);\n      }\n    });\n    const __returned__ = {\n      lat,\n      lng,\n      map,\n      loadGoogleMaps,\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","lat","lng","map","loadGoogleMaps","Promise","resolve","reject","window","google","maps","document","getElementById","Error","script","createElement","id","src","async","defer","onload","onerror","head","appendChild","googleMap","Map","value","center","zoom","addListener","e","latLng","err","console","error","message"],"sources":["C:/Users/ajib/OneDrive/Desktop/event-ticket/event-ticket-frontend/src/components/rex.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div ref=\"map\" style=\"height: 500px; width: 100%\"></div>\r\n    <p>Latitude: {{ lat }}</p>\r\n    <p>Longitude: {{ lng }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\nconst lat = ref(null)\r\nconst lng = ref(null)\r\nconst map = ref(null)\r\n\r\nconst loadGoogleMaps = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // Check if Google Maps is already loaded\r\n    if (window.google && window.google.maps) {\r\n      return resolve(window.google.maps)\r\n    }\r\n\r\n    // Avoid loading script multiple times\r\n    if (document.getElementById('google-maps-script')) {\r\n      return reject(new Error('Google Maps script is already loading or failed'))\r\n    }\r\n\r\n    // Load the Google Maps script\r\n    const script = document.createElement('script')\r\n    script.id = 'google-maps-script'\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCkbHZXmqyIxjFpN8bMvDeURTmlpEhDHv4`\r\n    script.async = true\r\n    script.defer = true\r\n\r\n    script.onload = () => {\r\n      if (window.google && window.google.maps) {\r\n        resolve(window.google.maps)\r\n      } else {\r\n        reject(new Error('Google Maps failed to load'))\r\n      }\r\n    }\r\n\r\n    script.onerror = () => reject(new Error('Failed to load Google Maps'))\r\n\r\n    document.head.appendChild(script)\r\n  })\r\n}\r\n\r\nonMounted(async () => {\r\n  try {\r\n    const maps = await loadGoogleMaps()\r\n\r\n    const googleMap = new maps.Map(map.value, {\r\n      center: { lat: 0, lng: 0 },\r\n      zoom: 2,\r\n    })\r\n\r\n    googleMap.addListener('click', (e) => {\r\n      lat.value = e.latLng.lat()\r\n      lng.value = e.latLng.lng()\r\n    })\r\n  } catch (err) {\r\n    console.error('Google Maps failed to load:', err.message)\r\n  }\r\n})\r\n</script>\r\n"],"mappings":"AASA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;;;;;;;IAEpC,MAAMC,GAAG,GAAGF,GAAG,CAAC,IAAI,CAAC;IACrB,MAAMG,GAAG,GAAGH,GAAG,CAAC,IAAI,CAAC;IACrB,MAAMI,GAAG,GAAGJ,GAAG,CAAC,IAAI,CAAC;IAErB,MAAMK,cAAc,GAAGA,CAAA,KAAM;MAC3B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtC;QACA,IAAIC,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE;UACvC,OAAOJ,OAAO,CAACE,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC;QACpC;;QAEA;QACA,IAAIC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC,EAAE;UACjD,OAAOL,MAAM,CAAC,IAAIM,KAAK,CAAC,iDAAiD,CAAC,CAAC;QAC7E;;QAEA;QACA,MAAMC,MAAM,GAAGH,QAAQ,CAACI,aAAa,CAAC,QAAQ,CAAC;QAC/CD,MAAM,CAACE,EAAE,GAAG,oBAAoB;QAChCF,MAAM,CAACG,GAAG,GAAI,qFAAoF;QAClGH,MAAM,CAACI,KAAK,GAAG,IAAI;QACnBJ,MAAM,CAACK,KAAK,GAAG,IAAI;QAEnBL,MAAM,CAACM,MAAM,GAAG,MAAM;UACpB,IAAIZ,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE;YACvCJ,OAAO,CAACE,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC;UAC7B,CAAC,MAAM;YACLH,MAAM,CAAC,IAAIM,KAAK,CAAC,4BAA4B,CAAC,CAAC;UACjD;QACF,CAAC;QAEDC,MAAM,CAACO,OAAO,GAAG,MAAMd,MAAM,CAAC,IAAIM,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAEtEF,QAAQ,CAACW,IAAI,CAACC,WAAW,CAACT,MAAM,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC;IAEDd,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMU,IAAI,GAAG,MAAMN,cAAc,CAAC,CAAC;QAEnC,MAAMoB,SAAS,GAAG,IAAId,IAAI,CAACe,GAAG,CAACtB,GAAG,CAACuB,KAAK,EAAE;UACxCC,MAAM,EAAE;YAAE1B,GAAG,EAAE,CAAC;YAAEC,GAAG,EAAE;UAAE,CAAC;UAC1B0B,IAAI,EAAE;QACR,CAAC,CAAC;QAEFJ,SAAS,CAACK,WAAW,CAAC,OAAO,EAAGC,CAAC,IAAK;UACpC7B,GAAG,CAACyB,KAAK,GAAGI,CAAC,CAACC,MAAM,CAAC9B,GAAG,CAAC,CAAC;UAC1BC,GAAG,CAACwB,KAAK,GAAGI,CAAC,CAACC,MAAM,CAAC7B,GAAG,CAAC,CAAC;QAC5B,CAAC,CAAC;MACJ,CAAC,CAAC,OAAO8B,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAACG,OAAO,CAAC;MAC3D;IACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}