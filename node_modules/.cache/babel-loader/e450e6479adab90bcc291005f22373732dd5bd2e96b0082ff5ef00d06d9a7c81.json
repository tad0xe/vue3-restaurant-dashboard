{"ast":null,"code":"import { mapActions } from \"vuex\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport default {\n  // ...other code\n\n  data() {\n    return {\n      categoryID: \"\",\n      title: \"\",\n      brand: \"\",\n      size: \"\",\n      description: \"\",\n      price: null,\n      stockQuantity: null,\n      availability: false\n    };\n  },\n  methods: {\n    ...mapActions([\"createProduct\"]),\n    async handleSubmit() {\n      const fileInput = this.$refs.fileInput;\n      const formData = new FormData();\n\n      // Add product data\n      formData.append(\"categoryID\", this.categoryID);\n      formData.append(\"title\", this.title);\n      formData.append(\"brand\", this.brand);\n      formData.append(\"size\", this.size);\n      formData.append(\"description\", this.description);\n      formData.append(\"availability\", this.availability);\n      //console.log(this.availability)\n\n      formData.append(\"price\", this.price);\n      formData.append(\"stockQuantity\", this.stockQuantity);\n\n      // Add images\n      for (let i = 0; i < fileInput.files.length; i++) {\n        const file = fileInput.files[i];\n        formData.append(\"photos\", file);\n      }\n      try {\n        const response = await this.createProduct(formData);\n\n        // Handle success, reset form, show success message, etc.\n        Swal.fire(\"product created\");\n        //console.log(\"Product created:\", response);\n      } catch (error) {\n        // Handle error, show error message, etc.\n        console.error(\"Product creation failed:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","axios","Swal","data","categoryID","title","brand","size","description","price","stockQuantity","availability","methods","handleSubmit","fileInput","$refs","formData","FormData","append","i","files","length","file","response","createProduct","fire","error","console"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\vue3-restaurant-dashboard\\src\\components\\app\\addProduct.vue"],"sourcesContent":["<template>\r\n<div class=\"content-boy\">\r\n  <div class=\"container-fluid bg-green d-flex  justify-content-center my-5\">\r\n    <form @submit.prevent=\"handleSubmit\" class=\"w-75 shadow p-4\">\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-md-6\">\r\n          <label for=\"title\" class=\"form-label\">Title:</label>\r\n          <input v-model=\"title\" type=\"text\" id=\"title\" name=\"title\" class=\"form-control\" />\r\n        </div>\r\n\r\n        <div class=\"mb-3 col-md-6\">\r\n          <label for=\"brand\" class=\"form-label\">Brand:</label>\r\n          <input v-model=\"brand\" type=\"text\" id=\"brand\" name=\"brand\" class=\"form-control\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-md-6\">\r\n          <label for=\"price\" class=\"form-label\">Price:</label>\r\n          <input v-model=\"price\" type=\"number\" id=\"price\" name=\"price\" class=\"form-control\" />\r\n        </div>\r\n\r\n        <div class=\"mb-3 col-md-6\">\r\n          <label for=\"stockQuantity\" class=\"form-label\">Stock Quantity:</label>\r\n          <input v-model=\"stockQuantity\" type=\"number\" id=\"stockQuantity\" name=\"stockQuantity\" class=\"form-control\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-md-12\">\r\n          <label for=\"description\" class=\"form-label\">Description:</label>\r\n          <textarea v-model=\"description\" id=\"description\" name=\"description\" class=\"form-control\"></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-md-12 form-check\">\r\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"availability\" v-model=\"availability\" />\r\n          <label class=\"form-check-label\" for=\"availability\">Availability</label>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-md-12\">\r\n          <label for=\"photos\" class=\"form-label\">Photos:</label>\r\n          <input ref=\"fileInput\" type=\"file\" name=\"photos\" multiple class=\"form-control\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"text-center\">\r\n        <button type=\"submit\" class=\"btn btn-primary\">Create Product</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n  // ...other code\r\n\r\n  data() {\r\n    return {\r\n      categoryID: \"\",\r\n      title: \"\",\r\n      brand: \"\",\r\n      size: \"\",\r\n      description: \"\",\r\n      price: null,\r\n      stockQuantity: null,\r\n      availability: false\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\"createProduct\"]),\r\n\r\n    async handleSubmit() {\r\n      const fileInput = this.$refs.fileInput;\r\n      const formData = new FormData();\r\n\r\n      // Add product data\r\n      formData.append(\"categoryID\", this.categoryID);\r\n      formData.append(\"title\", this.title);\r\n      formData.append(\"brand\", this.brand);\r\n      formData.append(\"size\", this.size);\r\n      formData.append(\"description\", this.description);\r\n      formData.append(\"availability\", this.availability);\r\n      //console.log(this.availability)\r\n\r\n      formData.append(\"price\", this.price);\r\n      formData.append(\"stockQuantity\", this.stockQuantity);\r\n\r\n      // Add images\r\n      for (let i = 0; i < fileInput.files.length; i++) {\r\n        const file = fileInput.files[i];\r\n        formData.append(\"photos\", file);\r\n      }\r\n\r\n      try {\r\n        const response = await this.createProduct(formData);\r\n\r\n        // Handle success, reset form, show success message, etc.\r\n           Swal.fire(\"product created\");\r\n        //console.log(\"Product created:\", response);\r\n      } catch (error) {\r\n        // Handle error, show error message, etc.\r\n        console.error(\"Product creation failed:\", error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AA2DA,SAASA,UAAS,QAAS,MAAM;AACjC,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACb;;EAEAC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,IAAI;MACXC,aAAa,EAAE,IAAI;MACnBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP,GAAGZ,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;IAEhC,MAAMa,YAAYA,CAAA,EAAG;MACnB,MAAMC,SAAQ,GAAI,IAAI,CAACC,KAAK,CAACD,SAAS;MACtC,MAAME,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;;MAE/B;MACAD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAACd,UAAU,CAAC;MAC9CY,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACb,KAAK,CAAC;MACpCW,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACZ,KAAK,CAAC;MACpCU,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACX,IAAI,CAAC;MAClCS,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACV,WAAW,CAAC;MAChDQ,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE,IAAI,CAACP,YAAY,CAAC;MAClD;;MAEAK,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACT,KAAK,CAAC;MACpCO,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,IAAI,CAACR,aAAa,CAAC;;MAEpD;MACA,KAAK,IAAIS,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIL,SAAS,CAACM,KAAK,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;QAC/C,MAAMG,IAAG,GAAIR,SAAS,CAACM,KAAK,CAACD,CAAC,CAAC;QAC/BH,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEI,IAAI,CAAC;MACjC;MAEA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,aAAa,CAACR,QAAQ,CAAC;;QAEnD;QACGd,IAAI,CAACuB,IAAI,CAAC,iBAAiB,CAAC;QAC/B;MACF,EAAE,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}