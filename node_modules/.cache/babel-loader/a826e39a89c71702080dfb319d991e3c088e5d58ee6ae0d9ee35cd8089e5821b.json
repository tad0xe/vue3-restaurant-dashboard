{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Orders\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\")) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: order._id\n    }, \" Order ID: \" + _toDisplayString(order._id), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","$data","loading","_hoisted_2","error","_hoisted_3","_toDisplayString","_hoisted_4","_Fragment","_renderList","orders","order","key","_id"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\rex.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Orders</h1>\r\n    <div v-if=\"loading\">Loading...</div>\r\n    <div v-else-if=\"error\">{{ error }}</div>\r\n    <ul v-else>\r\n      <li v-for=\"order in orders\" :key=\"order._id\">\r\n        Order ID: {{ order._id }} \r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'Orders',\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  },\r\n  methods: {\r\n    async fetchOrders() {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/api/orders'); // update with your actual backend URL\r\n        this.orders = response.data.orders;\r\n      } catch (err) {\r\n        this.error = 'Failed to fetch orders';\r\n        console.error(err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";gCAEIA,mBAAA,CAAe,YAAX,QAAM;;;;;;;;;;;uBADZC,mBAAA,CASM,cARJC,UAAe,EACJC,KAAA,CAAAC,OAAO,I,cAAlBH,mBAAA,CAAoC,OAAAI,UAAA,EAAhB,YAAU,KACdF,KAAA,CAAAG,KAAK,I,cAArBL,mBAAA,CAAwC,OAAAM,UAAA,EAAAC,gBAAA,CAAdL,KAAA,CAAAG,KAAK,qB,cAC/BL,mBAAA,CAIK,MAAAQ,UAAA,I,kBAHHR,mBAAA,CAEKS,SAAA,QAAAC,WAAA,CAFeR,KAAA,CAAAS,MAAM,EAAfC,KAAK;yBAAhBZ,mBAAA,CAEK;MAFwBa,GAAG,EAAED,KAAK,CAACE;OAAK,aACjC,GAAAP,gBAAA,CAAGK,KAAK,CAACE,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}