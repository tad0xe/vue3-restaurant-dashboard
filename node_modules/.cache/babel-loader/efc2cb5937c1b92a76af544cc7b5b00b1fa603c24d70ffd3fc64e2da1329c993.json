{"ast":null,"code":"// address.js\n\nimport axios from \"axios\";\nimport axiosInstance from \"@/helpers/axiosInstance\";\nconst state = {\n  country: \"\",\n  fullName: \"\",\n  users: [],\n  user: null,\n  addresses: [],\n  streetAddress1: \"\",\n  streetAddress2: \"\",\n  city: \"\",\n  state: \"\",\n  zipCode: \"\",\n  phoneNumber: \"\",\n  deliveryInstructions: \"\",\n  securityCode: \"\",\n  usersWithAddresses: [],\n  error: null\n};\nconst mutations = {\n  SET_USERS_WITH_ADDRESSES(state, users) {\n    state.usersWithAddresses = users;\n  },\n  setError(state, error) {\n    state.error = error;\n  },\n  setAddressField(state, {\n    field,\n    value\n  }) {\n    state[field] = value;\n  },\n  clearAddressFields(state) {\n    for (const field in state) {\n      state[field] = \"\";\n    }\n  },\n  setAddresses(state, addresses) {\n    state.addresses = addresses;\n  },\n  setMessage: (state, message) => state.message = message,\n  removeAddress: (state, index) => state.addresses.splice(index, 1)\n};\nconst actions = {\n  fetchAddresses({\n    commit\n  }) {\n    return new Promise((resolve, reject) => {\n      axiosInstance.get('/address').then(response => {\n        const addresses = response.data.addresses;\n        commit('setAddresses', addresses);\n        resolve(addresses);\n      }).catch(error => {\n        console.error(error);\n        reject(error);\n      });\n    });\n  },\n  fetchUsersWithAddresses({\n    commit\n  }) {\n    return axiosInstance.get(\"/users-with-addresses\").then(response => {\n      const users = response.data.users;\n      commit(\"SET_USERS_WITH_ADDRESSES\", users);\n      return users;\n    }).catch(error => {\n      commit(\"setError\", error.response.data.message);\n      return Promise.reject(error.response.data.message);\n    });\n  },\n  deleteAddress({\n    commit,\n    rootState\n  }, {\n    id,\n    index\n  }) {\n    const token = localStorage.getItem(\"token\");\n    axios.delete(`https://restaurant-n54j.onrender.com/api/addresses/${id}`, {\n      headers: {\n        Authorization: \"Bearer\" + token,\n        \"x-access-token\": token\n      }\n    }).then(response => {\n      commit(\"setMessage\", response.message);\n      commit(\"removeAddress\", index);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  setDefaultAddress({\n    commit,\n    rootState\n  }, id) {\n    const token = localStorage.getItem(\"token\");\n    axios.put(`https://restaurant-n54j.onrender.com/api/addresses/set/default`, {\n      id: id\n    }, {\n      headers: {\n        Authorization: \"Bearer\" + token,\n        \"x-access-token\": token\n      }\n    }).then(res => {\n      commit(\"setMessage\", res.data.message);\n    }).catch(error => {\n      commit(\"setMessage\", error.message);\n      console.log(error);\n    });\n  },\n  addAddress({\n    state\n  }) {\n    // const token = localStorage.getItem(\"token\");\n    return axiosInstance.post(\"/addresses\", {\n      country: state.country,\n      fullName: state.fullName,\n      streetAddress: state.streetAddress1 + \" \" + state.streetAddress2,\n      city: state.city,\n      state: state.state,\n      zipCode: state.zipCode,\n      phoneNumber: state.phoneNumber,\n      deliverInstructions: state.deliveryInstructions,\n      securityCode: state.securityCode\n    }, {}).then(response => {\n      // Handle successful response if needed\n      //  console.log(response);\n    }).catch(error => {\n      // Handle error if needed\n      //  console.log(error);\n    });\n  },\n  clearAddressFields({\n    commit\n  }) {\n    commit(\"clearAddressFields\");\n  }\n};\nconst getters = {\n  addresses: state => state.addresses,\n  getUsersWithAddresses: state => {\n    return state.usersWithAddresses;\n  },\n  error: state => {\n    return state.error;\n  }\n};\nexport default {\n  //   namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axios","axiosInstance","state","country","fullName","users","user","addresses","streetAddress1","streetAddress2","city","zipCode","phoneNumber","deliveryInstructions","securityCode","usersWithAddresses","error","mutations","SET_USERS_WITH_ADDRESSES","setError","setAddressField","field","value","clearAddressFields","setAddresses","setMessage","message","removeAddress","index","splice","actions","fetchAddresses","commit","Promise","resolve","reject","get","then","response","data","catch","console","fetchUsersWithAddresses","deleteAddress","rootState","id","token","localStorage","getItem","delete","headers","Authorization","log","setDefaultAddress","put","res","addAddress","post","streetAddress","deliverInstructions","getters","getUsersWithAddresses"],"sources":["C:/Users/ajib/OneDrive/Desktop/event-ticket/vue3-restaurant-dashboard/src/store/modules/address.js"],"sourcesContent":["// address.js\r\n\r\nimport axios from \"axios\";\r\nimport axiosInstance from \"@/helpers/axiosInstance\";\r\n\r\nconst state = {\r\n    country: \"\",\r\n    fullName: \"\",\r\n    users: [],\r\n    user: null,\r\n    addresses: [],\r\n    streetAddress1: \"\",\r\n    streetAddress2: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zipCode: \"\",\r\n    phoneNumber: \"\",\r\n    deliveryInstructions: \"\",\r\n    securityCode: \"\",\r\n    usersWithAddresses: [],\r\n    error: null,\r\n};\r\n\r\nconst mutations = {\r\n    SET_USERS_WITH_ADDRESSES(state, users) {\r\n        state.usersWithAddresses = users;\r\n      },\r\n      setError(state, error) {\r\n        state.error = error;\r\n      },\r\n    setAddressField(state, {\r\n        field,\r\n        value\r\n    }) {\r\n        state[field] = value;\r\n    },\r\n    clearAddressFields(state) {\r\n        for (const field in state) {\r\n            state[field] = \"\";\r\n        }\r\n    },\r\n    setAddresses(state, addresses) {\r\n        state.addresses = addresses;\r\n      },\r\n    setMessage: (state, message) => (state.message = message),\r\n    removeAddress: (state, index) => state.addresses.splice(index, 1),\r\n\r\n};\r\n\r\nconst actions = {\r\n    fetchAddresses({ commit }) {\r\n        return new Promise((resolve, reject) => {\r\n          axiosInstance.get('/address')\r\n            .then(response => {\r\n              const addresses = response.data.addresses;\r\n              commit('setAddresses', addresses);\r\n              resolve(addresses);\r\n            })\r\n            .catch(error => {\r\n              console.error(error);\r\n              reject(error);\r\n            });\r\n        });\r\n      },\r\n      fetchUsersWithAddresses({ commit }) {\r\n        return axiosInstance\r\n          .get(\"/users-with-addresses\")\r\n          .then((response) => {\r\n            const users = response.data.users;\r\n            commit(\"SET_USERS_WITH_ADDRESSES\", users);\r\n            return users;\r\n          })\r\n          .catch((error) => {\r\n            commit(\"setError\", error.response.data.message);\r\n            return Promise.reject(error.response.data.message);\r\n          });\r\n      },\r\n\r\n\r\n    deleteAddress({\r\n        commit,\r\n        rootState\r\n    }, {\r\n        id,\r\n        index\r\n    }) {\r\n        const token = localStorage.getItem(\"token\");\r\n        axios\r\n            .delete(`https://restaurant-n54j.onrender.com/api/addresses/${id}`, {\r\n                headers: {\r\n                    Authorization: \"Bearer\" + token,\r\n                    \"x-access-token\": token,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                commit(\"setMessage\", response.message);\r\n                commit(\"removeAddress\", index);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    },\r\n\r\n    setDefaultAddress({\r\n        commit,\r\n        rootState\r\n    }, id) {\r\n        const token = localStorage.getItem(\"token\");\r\n        axios\r\n            .put(\r\n                `https://restaurant-n54j.onrender.com/api/addresses/set/default`, {\r\n                    id: id\r\n                }, {\r\n                    headers: {\r\n                        Authorization: \"Bearer\" + token,\r\n                        \"x-access-token\": token,\r\n                    },\r\n                }\r\n            )\r\n            .then((res) => {\r\n                commit(\"setMessage\", res.data.message);\r\n            })\r\n            .catch((error) => {\r\n                commit(\"setMessage\", error.message);\r\n                console.log(error);\r\n            });\r\n    },\r\n    addAddress({\r\n        state\r\n    }) {\r\n        // const token = localStorage.getItem(\"token\");\r\n        return axiosInstance\r\n            .post(\"/addresses\", {\r\n                country: state.country,\r\n                fullName: state.fullName,\r\n                streetAddress: state.streetAddress1 + \" \" + state.streetAddress2,\r\n                city: state.city,\r\n                state: state.state,\r\n                zipCode: state.zipCode,\r\n                phoneNumber: state.phoneNumber,\r\n                deliverInstructions: state.deliveryInstructions,\r\n                securityCode: state.securityCode\r\n            }, {\r\n\r\n            })\r\n            .then(response => {\r\n                // Handle successful response if needed\r\n              //  console.log(response);\r\n            })\r\n            .catch(error => {\r\n                // Handle error if needed\r\n              //  console.log(error);\r\n            });\r\n    },\r\n    clearAddressFields({\r\n        commit\r\n    }) {\r\n        commit(\"clearAddressFields\");\r\n    }\r\n};\r\n\r\nconst getters = {\r\n    addresses: state => state.addresses,\r\n    getUsersWithAddresses: (state) => {\r\n        return state.usersWithAddresses;\r\n      },\r\n      error: (state) => {\r\n        return state.error;\r\n      },\r\n\r\n};\r\n\r\n\r\nexport default {\r\n //   namespaced: true,\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}