{"ast":null,"code":"// store/index.js\n\nimport axiosInstance from \"../../helpers/axiosInstance\";\nimport Swal from \"sweetalert2\";\nimport router from '@/router';\nconst state = {\n  users: [],\n  user: null,\n  error: null,\n  userDetails: null,\n  token: null\n};\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_USER_DETAILS(state, userDetails) {\n    state.userDetails = userDetails;\n  },\n  SET_USERS(state, users) {\n    state.users = users;\n  },\n  setUser(state, user) {\n    state.user = user;\n  },\n  setError(state, error) {\n    state.error = error;\n  }\n};\nconst actions = {\n  setToken({\n    commit\n  }, token) {\n    commit(\"setToken\", token);\n  },\n  getTokenFromStorage({\n    commit\n  }) {\n    const token = localStorage.getItem(\"token\");\n    commit(\"SET_TOKEN\", token);\n  },\n  REGISTER_USER({\n    commit\n  }, payload) {\n    return new Promise((resolve, reject) => {\n      axiosInstance.post(\"/auth/signup\", payload).then(res => {\n        if (res.data.success == true) {\n          resolve(res.data);\n        }\n      }).catch(err => {\n        reject(err.response.data);\n      });\n    });\n  },\n  LOGIN_USER({\n    commit\n  }, payload) {\n    return new Promise((resolve, reject) => {\n      axiosInstance.post(\"/auth/login\", payload).then(res => {\n        if (res.data.success == true) {\n          const token = res.data.token;\n          localStorage.setItem(\"token\", token);\n          resolve(res.data);\n        } else {\n          reject(res.data);\n        }\n      }).catch(err => {\n        reject(err.response.data);\n      });\n    });\n  },\n  logout({\n    commit\n  }) {\n    return new Promise((resolve, reject) => {\n      commit(\"logout\");\n      localStorage.removeItem(\"token\");\n      delete axiosInstance.defaults.headers.common[\"Authorization\"];\n      resolve();\n      window.location.href = '/login'; // Redirect to the login page\n    });\n  },\n\n  async sendCodeToBackend({\n    commit\n  }, code) {\n    try {\n      const headers = {\n        Authorization: code\n      };\n      console.log('Authorization header:', headers.Authorization);\n      const response = await axiosInstance.post('http://localhost:4000/api/auth/google', null, {\n        headers\n      });\n      const userDetails = response.data;\n      commit('SET_USER_DETAILS', userDetails);\n      localStorage.setItem('token', response.data.token);\n      Swal.fire(\"login successful\");\n      window.location.href = '/dash';\n    } catch (error) {\n      console.error('Failed to send authorization code:', error);\n    }\n  },\n  fetchUsers({\n    commit\n  }) {\n    return axiosInstance.get('/users').then(response => {\n      // console.log(response)\n      commit('SET_USERS', response.data.users);\n      return dispatch('fetchAddressesForUsers', users);\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n  getUser({\n    commit\n  }) {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      commit('setError', 'No token available');\n      return Promise.reject('No token available');\n    }\n    return axiosInstance.get('/auth/user', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      const user = response.data.user;\n      user.isAdmin = user.isAdmin === true; // Assuming the isAdmin property is already a boolean\n      commit('setUser', user);\n      return user;\n    }).catch(error => {\n      commit('setError', error.response.data.message);\n      return Promise.reject(error.response.data.message);\n    });\n  },\n  setToken({\n    commit\n  }, token) {\n    commit('SET_TOKEN', token);\n  }\n};\nconst getters = {\n  getToken(state) {\n    return state.token;\n  },\n  isAdmin: state => state.user && state.user.isAdmin,\n  totalUserPercent(state) {\n    const totalUsers = state.users.length;\n    //console.log(totalUsers)\n    return totalUsers / 100;\n  },\n  getUsers: state => {\n    return state.users;\n  },\n  getUser(state) {\n    return state.user;\n  },\n  currentUser(state) {\n    return state.user;\n  },\n  error(state) {\n    return state.error;\n  }\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axiosInstance","Swal","router","state","users","user","error","userDetails","token","mutations","SET_TOKEN","SET_USER_DETAILS","SET_USERS","setUser","setError","actions","setToken","commit","getTokenFromStorage","localStorage","getItem","REGISTER_USER","payload","Promise","resolve","reject","post","then","res","data","success","catch","err","response","LOGIN_USER","setItem","logout","removeItem","defaults","headers","common","window","location","href","sendCodeToBackend","code","Authorization","console","log","fire","fetchUsers","get","dispatch","getUser","isAdmin","message","getters","getToken","totalUserPercent","totalUsers","length","getUsers","currentUser"],"sources":["C:/Users/ajib/OneDrive/Desktop/event-ticket/event-ticket-frontend/src/store/modules/auth.js"],"sourcesContent":["// store/index.js\r\n\r\n\r\n\r\nimport axiosInstance from \"../../helpers/axiosInstance\";\r\nimport Swal from \"sweetalert2\";\r\nimport router from '@/router';\r\n\r\nconst state = {\r\n  users: [],\r\n  user: null,\r\n  error: null,\r\n  userDetails: null,\r\n  token: null,\r\n};\r\nconst mutations = {\r\n  SET_TOKEN(state, token) {\r\n    state.token = token;\r\n  },\r\n  SET_USER_DETAILS(state, userDetails) {\r\n    state.userDetails = userDetails;\r\n  },\r\n  SET_USERS(state, users) {\r\n    state.users = users\r\n  },\r\n  setUser(state, user) {\r\n    state.user = user;\r\n  },\r\n  setError(state, error) {\r\n    state.error = error;\r\n  },\r\n};\r\nconst actions = {\r\n  setToken({ commit }, token) {\r\n    commit(\"setToken\", token);\r\n  },\r\n  getTokenFromStorage({ commit }) {\r\n    const token = localStorage.getItem(\"token\");\r\n    commit(\"SET_TOKEN\", token);\r\n  },\r\n  REGISTER_USER({\r\n    commit\r\n  }, payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axiosInstance.post(\"/auth/signup\", payload)\r\n        .then(res => {\r\n          if (res.data.success == true) {\r\n            resolve(res.data)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          reject(err.response.data)\r\n        })\r\n    })\r\n  },\r\n  LOGIN_USER({\r\n    commit\r\n  }, payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axiosInstance.post(\"/auth/login\", payload)\r\n        .then(res => {\r\n          if (res.data.success == true) {\r\n            const token = res.data.token;\r\n            localStorage.setItem(\"token\", token);\r\n            resolve(res.data);\r\n          } else {\r\n            reject(res.data);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          reject(err.response.data);\r\n        });\r\n    });\r\n  },\r\n\r\n\r\n  logout({\r\n    commit\r\n  }) {\r\n    return new Promise((resolve, reject) => {\r\n      commit(\"logout\");\r\n      localStorage.removeItem(\"token\");\r\n      delete axiosInstance.defaults.headers.common[\"Authorization\"];\r\n      resolve();\r\n      window.location.href = '/login'; // Redirect to the login page\r\n    });\r\n  },\r\n  async sendCodeToBackend({ commit }, code) {\r\n    try {\r\n      const headers = {\r\n        Authorization: code,\r\n      };\r\n      console.log('Authorization header:', headers.Authorization);\r\n\r\n      const response = await axiosInstance.post('http://localhost:4000/api/auth/google', null, { headers });\r\n      const userDetails = response.data;\r\n\r\n      commit('SET_USER_DETAILS', userDetails);\r\n\r\n      localStorage.setItem('token', response.data.token);\r\n      Swal.fire(\"login successful\");\r\n      window.location.href = '/dash';\r\n\r\n        } catch (error) {\r\n      console.error('Failed to send authorization code:', error);\r\n    }\r\n\r\n\r\n  },\r\n\r\n  fetchUsers({\r\n    commit\r\n  }) {\r\n    return axiosInstance\r\n      .get('/users')\r\n      .then((response) => {\r\n        // console.log(response)\r\n        commit('SET_USERS', response.data.users);\r\n        return dispatch('fetchAddressesForUsers', users);\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  },\r\n  getUser({ commit }) {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      commit('setError', 'No token available');\r\n      return Promise.reject('No token available');\r\n    }\r\n\r\n    return axiosInstance\r\n      .get('/auth/user', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const user = response.data.user;\r\n        user.isAdmin = user.isAdmin === true; // Assuming the isAdmin property is already a boolean\r\n        commit('setUser', user);\r\n        return user;\r\n      })\r\n      .catch((error) => {\r\n        commit('setError', error.response.data.message);\r\n        return Promise.reject(error.response.data.message);\r\n      });\r\n  },\r\n\r\n\r\n\r\n  setToken({ commit }, token) {\r\n    commit('SET_TOKEN', token);\r\n  },\r\n\r\n};\r\nconst getters = {\r\n  getToken(state) {\r\n    return state.token;\r\n  },\r\n  isAdmin: state => state.user && state.user.isAdmin,\r\n\r\n\r\n  totalUserPercent(state) {\r\n    const totalUsers = state.users.length;\r\n    //console.log(totalUsers)\r\n    return ((totalUsers / 100));\r\n\r\n  },\r\n\r\n  getUsers: (state) => {\r\n    return state.users;\r\n  },\r\n  getUser(state) {\r\n    return state.user;\r\n  },\r\n\r\n  currentUser(state) {\r\n    return state.user;\r\n  },\r\n  error(state) {\r\n    return state.error;\r\n  },\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default {\r\n\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n}"],"mappings":"AAAA;;AAIA,OAAOA,aAAa,MAAM,6BAA6B;AACvD,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAE;AACT,CAAC;AACD,MAAMC,SAAS,GAAG;EAChBC,SAASA,CAACP,KAAK,EAAEK,KAAK,EAAE;IACtBL,KAAK,CAACK,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDG,gBAAgBA,CAACR,KAAK,EAAEI,WAAW,EAAE;IACnCJ,KAAK,CAACI,WAAW,GAAGA,WAAW;EACjC,CAAC;EACDK,SAASA,CAACT,KAAK,EAAEC,KAAK,EAAE;IACtBD,KAAK,CAACC,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDS,OAAOA,CAACV,KAAK,EAAEE,IAAI,EAAE;IACnBF,KAAK,CAACE,IAAI,GAAGA,IAAI;EACnB,CAAC;EACDS,QAAQA,CAACX,KAAK,EAAEG,KAAK,EAAE;IACrBH,KAAK,CAACG,KAAK,GAAGA,KAAK;EACrB;AACF,CAAC;AACD,MAAMS,OAAO,GAAG;EACdC,QAAQA,CAAC;IAAEC;EAAO,CAAC,EAAET,KAAK,EAAE;IAC1BS,MAAM,CAAC,UAAU,EAAET,KAAK,CAAC;EAC3B,CAAC;EACDU,mBAAmBA,CAAC;IAAED;EAAO,CAAC,EAAE;IAC9B,MAAMT,KAAK,GAAGW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CH,MAAM,CAAC,WAAW,EAAET,KAAK,CAAC;EAC5B,CAAC;EACDa,aAAaA,CAAC;IACZJ;EACF,CAAC,EAAEK,OAAO,EAAE;IACV,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCzB,aAAa,CAAC0B,IAAI,CAAC,cAAc,EAAEJ,OAAO,CAAC,CACxCK,IAAI,CAACC,GAAG,IAAI;QACX,IAAIA,GAAG,CAACC,IAAI,CAACC,OAAO,IAAI,IAAI,EAAE;UAC5BN,OAAO,CAACI,GAAG,CAACC,IAAI,CAAC;QACnB;MACF,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAI;QACZP,MAAM,CAACO,GAAG,CAACC,QAAQ,CAACJ,IAAI,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EACDK,UAAUA,CAAC;IACTjB;EACF,CAAC,EAAEK,OAAO,EAAE;IACV,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCzB,aAAa,CAAC0B,IAAI,CAAC,aAAa,EAAEJ,OAAO,CAAC,CACvCK,IAAI,CAACC,GAAG,IAAI;QACX,IAAIA,GAAG,CAACC,IAAI,CAACC,OAAO,IAAI,IAAI,EAAE;UAC5B,MAAMtB,KAAK,GAAGoB,GAAG,CAACC,IAAI,CAACrB,KAAK;UAC5BW,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAE3B,KAAK,CAAC;UACpCgB,OAAO,CAACI,GAAG,CAACC,IAAI,CAAC;QACnB,CAAC,MAAM;UACLJ,MAAM,CAACG,GAAG,CAACC,IAAI,CAAC;QAClB;MACF,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAI;QACZP,MAAM,CAACO,GAAG,CAACC,QAAQ,CAACJ,IAAI,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EAGDO,MAAMA,CAAC;IACLnB;EACF,CAAC,EAAE;IACD,OAAO,IAAIM,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCR,MAAM,CAAC,QAAQ,CAAC;MAChBE,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;MAChC,OAAOrC,aAAa,CAACsC,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;MAC7DhB,OAAO,CAAC,CAAC;MACTiB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;;EACD,MAAMC,iBAAiBA,CAAC;IAAE3B;EAAO,CAAC,EAAE4B,IAAI,EAAE;IACxC,IAAI;MACF,MAAMN,OAAO,GAAG;QACdO,aAAa,EAAED;MACjB,CAAC;MACDE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAET,OAAO,CAACO,aAAa,CAAC;MAE3D,MAAMb,QAAQ,GAAG,MAAMjC,aAAa,CAAC0B,IAAI,CAAC,uCAAuC,EAAE,IAAI,EAAE;QAAEa;MAAQ,CAAC,CAAC;MACrG,MAAMhC,WAAW,GAAG0B,QAAQ,CAACJ,IAAI;MAEjCZ,MAAM,CAAC,kBAAkB,EAAEV,WAAW,CAAC;MAEvCY,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACJ,IAAI,CAACrB,KAAK,CAAC;MAClDP,IAAI,CAACgD,IAAI,CAAC,kBAAkB,CAAC;MAC7BR,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;IAE5B,CAAC,CAAC,OAAOrC,KAAK,EAAE;MAClByC,OAAO,CAACzC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EAGF,CAAC;EAED4C,UAAUA,CAAC;IACTjC;EACF,CAAC,EAAE;IACD,OAAOjB,aAAa,CACjBmD,GAAG,CAAC,QAAQ,CAAC,CACbxB,IAAI,CAAEM,QAAQ,IAAK;MAClB;MACAhB,MAAM,CAAC,WAAW,EAAEgB,QAAQ,CAACJ,IAAI,CAACzB,KAAK,CAAC;MACxC,OAAOgD,QAAQ,CAAC,wBAAwB,EAAEhD,KAAK,CAAC;IAElD,CAAC,CAAC,CACD2B,KAAK,CAAEzB,KAAK,IAAK;MAChByC,OAAO,CAACzC,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EACD+C,OAAOA,CAAC;IAAEpC;EAAO,CAAC,EAAE;IAClB,MAAMT,KAAK,GAAGW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACZ,KAAK,EAAE;MACVS,MAAM,CAAC,UAAU,EAAE,oBAAoB,CAAC;MACxC,OAAOM,OAAO,CAACE,MAAM,CAAC,oBAAoB,CAAC;IAC7C;IAEA,OAAOzB,aAAa,CACjBmD,GAAG,CAAC,YAAY,EAAE;MACjBZ,OAAO,EAAE;QACPO,aAAa,EAAG,UAAStC,KAAM;MACjC;IACF,CAAC,CAAC,CACDmB,IAAI,CAAEM,QAAQ,IAAK;MAClB,MAAM5B,IAAI,GAAG4B,QAAQ,CAACJ,IAAI,CAACxB,IAAI;MAC/BA,IAAI,CAACiD,OAAO,GAAGjD,IAAI,CAACiD,OAAO,KAAK,IAAI,CAAC,CAAC;MACtCrC,MAAM,CAAC,SAAS,EAAEZ,IAAI,CAAC;MACvB,OAAOA,IAAI;IACb,CAAC,CAAC,CACD0B,KAAK,CAAEzB,KAAK,IAAK;MAChBW,MAAM,CAAC,UAAU,EAAEX,KAAK,CAAC2B,QAAQ,CAACJ,IAAI,CAAC0B,OAAO,CAAC;MAC/C,OAAOhC,OAAO,CAACE,MAAM,CAACnB,KAAK,CAAC2B,QAAQ,CAACJ,IAAI,CAAC0B,OAAO,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;EAIDvC,QAAQA,CAAC;IAAEC;EAAO,CAAC,EAAET,KAAK,EAAE;IAC1BS,MAAM,CAAC,WAAW,EAAET,KAAK,CAAC;EAC5B;AAEF,CAAC;AACD,MAAMgD,OAAO,GAAG;EACdC,QAAQA,CAACtD,KAAK,EAAE;IACd,OAAOA,KAAK,CAACK,KAAK;EACpB,CAAC;EACD8C,OAAO,EAAEnD,KAAK,IAAIA,KAAK,CAACE,IAAI,IAAIF,KAAK,CAACE,IAAI,CAACiD,OAAO;EAGlDI,gBAAgBA,CAACvD,KAAK,EAAE;IACtB,MAAMwD,UAAU,GAAGxD,KAAK,CAACC,KAAK,CAACwD,MAAM;IACrC;IACA,OAASD,UAAU,GAAG,GAAG;EAE3B,CAAC;EAEDE,QAAQ,EAAG1D,KAAK,IAAK;IACnB,OAAOA,KAAK,CAACC,KAAK;EACpB,CAAC;EACDiD,OAAOA,CAAClD,KAAK,EAAE;IACb,OAAOA,KAAK,CAACE,IAAI;EACnB,CAAC;EAEDyD,WAAWA,CAAC3D,KAAK,EAAE;IACjB,OAAOA,KAAK,CAACE,IAAI;EACnB,CAAC;EACDC,KAAKA,CAACH,KAAK,EAAE;IACX,OAAOA,KAAK,CAACG,KAAK;EACpB;AAIF,CAAC;AAGD,eAAe;EAEbH,KAAK;EACLM,SAAS;EACTM,OAAO;EACPyC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}