{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport barchart from \"../charts/barChart.vue\";\nimport { mapGetters } from \"vuex\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    barchart\n  },\n  data() {\n    return {\n      revenues: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters([\"getOrders\", \"getProducts\", \"deliveredCount\", \"cancelledCount\", \"onDeliveryCount\", \"allProducts\", \"allOrders\", \"getUsers\", \"allOrdersLength\", \"totalUsers\", \"totalUserPercent\", \"totalPercentage\", \"totalPercent\", \"totalOrdersPercentage\", \"totalOrdersPrice\"]),\n    orders() {\n      return this.getOrders;\n    },\n    products() {\n      return this.getProducts;\n    },\n    users() {\n      return this.getUsers;\n    }\n  },\n  mounted() {\n    this.$store.dispatch(\"fetchOrders\");\n    this.$store.dispatch(\"fetchProducts\");\n    this.$store.dispatch(\"fetchUsers\");\n    axios.get(`https://restaurant-n54j.onrender.com/api/revenue`, {}).then(response => {\n      this.revenues = response.data.revenues;\n      const options = {\n        series: [{\n          name: \"Income\",\n          data: []\n        }, {\n          name: \"Expenses\",\n          data: []\n        }],\n        chart: {\n          type: \"area\"\n        },\n        xaxis: {\n          categories: []\n        }\n      };\n      this.revenues.forEach(revenue => {\n        options.series[0].data.push(revenue.income);\n        options.series[1].data.push(revenue.expenses);\n        options.xaxis.categories.push(new Date(revenue.time).toLocaleDateString());\n      });\n      var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n      chart.render();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n};","map":{"version":3,"names":["barchart","mapGetters","axios","components","data","revenues","computed","orders","getOrders","products","getProducts","users","getUsers","mounted","$store","dispatch","get","then","response","options","series","name","chart","type","xaxis","categories","forEach","revenue","push","income","expenses","Date","time","toLocaleDateString","ApexCharts","document","querySelector","render","catch","error","console","log"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\vue3-restaurant-dashboard\\src\\components\\views\\AboutView.vue"],"sourcesContent":["<template>\r\n   <div class=\"container text-start py-5\">\r\n      <div class=\"row align-items-center\">\r\n        <!-- Text Section -->\r\n        <div class=\"col-lg-6 mb-4 mb-lg-0\">\r\n          <h1 class=\"fw-bold mb-3\">About Us</h1>\r\n          <p class=\"fs-5 mb-4\">\r\n            Welcome to 234 AFRICA, your premier event ticketing platform dedicated to connecting people with unforgettable experiences across Africa.</p>\r\n          <p class=\"fs-6 text-muted\">\r\n            Our platform connects event organizers and attendees in a seamless way, giving you real-time access to tickets, event details, and more.\r\n          </p>\r\n          <p class=\"fs-6 text-muted\">\r\n            Join our growing community and never miss out on the next big thing around you!\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Image Section -->\r\n        <div class=\"col-lg-6 text-center\">\r\n          <img\r\n            src=\"https://images.unsplash.com/photo-1521737604893-d14cc237f11d\"\r\n            alt=\"People enjoying an event\"\r\n            class=\"img-fluid rounded\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n</template>\r\n<script>\r\nimport barchart from \"../charts/barChart.vue\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  components: {\r\n    barchart\r\n  },\r\n  data() {\r\n    return {\r\n      revenues: \"\"\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\r\n      \"getOrders\",\r\n      \"getProducts\",\r\n      \"deliveredCount\",\r\n      \"cancelledCount\",\r\n      \"onDeliveryCount\",\r\n      \"allProducts\",\r\n      \"allOrders\",\r\n      \"getUsers\",\r\n      \"allOrdersLength\",\r\n      \"totalUsers\",\r\n      \"totalUserPercent\",\r\n      \"totalPercentage\",\r\n      \"totalPercent\",\r\n      \"totalOrdersPercentage\",\r\n      \"totalOrdersPrice\"\r\n    ]),\r\n    orders() {\r\n      return this.getOrders;\r\n    },\r\n    products() {\r\n      return this.getProducts;\r\n    },\r\n     users() {\r\n      return this.getUsers;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(\"fetchOrders\");\r\n\r\n    this.$store.dispatch(\"fetchProducts\");\r\n    this.$store.dispatch(\"fetchUsers\");\r\n    axios\r\n      .get(`https://restaurant-n54j.onrender.com/api/revenue`, {})\r\n      .then(response => {\r\n        this.revenues = response.data.revenues;\r\n\r\n        const options = {\r\n          series: [\r\n            {\r\n              name: \"Income\",\r\n              data: []\r\n            },\r\n            {\r\n              name: \"Expenses\",\r\n              data: []\r\n            }\r\n          ],\r\n          chart: {\r\n            type: \"area\"\r\n          },\r\n          xaxis: {\r\n            categories: []\r\n          }\r\n        };\r\n\r\n        this.revenues.forEach(revenue => {\r\n          options.series[0].data.push(revenue.income);\r\n          options.series[1].data.push(revenue.expenses);\r\n          options.xaxis.categories.push(\r\n            new Date(revenue.time).toLocaleDateString()\r\n          );\r\n        });\r\n\r\n        var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\r\n        chart.render();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.typewriter {\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  animation: typing 2s steps(40, end), blink-caret 0.75s step-end infinite;\r\n}\r\n\r\n@keyframes typing {\r\n  from {\r\n    width: 0;\r\n  }\r\n  to {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n@keyframes blink-caret {\r\n  from,\r\n  to {\r\n    border-color: transparent;\r\n  }\r\n  50% {\r\n    border-color: #000;\r\n  }\r\n}\r\n</style>"],"mappings":";AA6BA,OAAOA,QAAO,MAAO,wBAAwB;AAC7C,SAASC,UAAS,QAAS,MAAM;AAEjC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACR,GAAGL,UAAU,CAAC,CACZ,WAAW,EACX,aAAa,EACb,gBAAgB,EAChB,gBAAgB,EAChB,iBAAiB,EACjB,aAAa,EACb,WAAW,EACX,UAAU,EACV,iBAAiB,EACjB,YAAY,EACZ,kBAAkB,EAClB,iBAAiB,EACjB,cAAc,EACd,uBAAuB,EACvB,kBAAiB,CAClB,CAAC;IACFM,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,SAAS;IACvB,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,WAAW;IACzB,CAAC;IACAC,KAAKA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,QAAQ;IACtB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,aAAa,CAAC;IAEnC,IAAI,CAACD,MAAM,CAACC,QAAQ,CAAC,eAAe,CAAC;IACrC,IAAI,CAACD,MAAM,CAACC,QAAQ,CAAC,YAAY,CAAC;IAClCb,KAAI,CACDc,GAAG,CAAE,kDAAiD,EAAE,CAAC,CAAC,EAC1DC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACb,QAAO,GAAIa,QAAQ,CAACd,IAAI,CAACC,QAAQ;MAEtC,MAAMc,OAAM,GAAI;QACdC,MAAM,EAAE,CACN;UACEC,IAAI,EAAE,QAAQ;UACdjB,IAAI,EAAE;QACR,CAAC,EACD;UACEiB,IAAI,EAAE,UAAU;UAChBjB,IAAI,EAAE;QACR,EACD;QACDkB,KAAK,EAAE;UACLC,IAAI,EAAE;QACR,CAAC;QACDC,KAAK,EAAE;UACLC,UAAU,EAAE;QACd;MACF,CAAC;MAED,IAAI,CAACpB,QAAQ,CAACqB,OAAO,CAACC,OAAM,IAAK;QAC/BR,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC,CAAChB,IAAI,CAACwB,IAAI,CAACD,OAAO,CAACE,MAAM,CAAC;QAC3CV,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC,CAAChB,IAAI,CAACwB,IAAI,CAACD,OAAO,CAACG,QAAQ,CAAC;QAC7CX,OAAO,CAACK,KAAK,CAACC,UAAU,CAACG,IAAI,CAC3B,IAAIG,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAC5C,CAAC;MACH,CAAC,CAAC;MAEF,IAAIX,KAAI,GAAI,IAAIY,UAAU,CAACC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,EAAEjB,OAAO,CAAC;MACrEG,KAAK,CAACe,MAAM,CAAC,CAAC;IAChB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}