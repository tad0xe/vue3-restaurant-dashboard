{"ast":null,"code":"import axios from \"axios\";\nimport QrcodeVue from \"qrcode.vue\";\nexport default {\n  name: \"PaymentSuccess\",\n  components: {\n    QrcodeVue\n  },\n  data() {\n    return {\n      reference: \"\",\n      verified: false,\n      loading: true\n    };\n  },\n  methods: {\n    async sendOrderInfo() {\n      try {\n        const reference = localStorage.getItem(\"paystack_reference\");\n        const payload = {\n          reference,\n          // Paystack reference\n          contact: {\n            email: this.getContactInfo.email,\n            phone: this.getContactInfo.phone\n          },\n          userId: this.getCart[0]?.user,\n          // Get user from first cart item\n          tickets: this.selectedTickets // Only selected ones\n        };\n\n        const res = await axios.post(\"http://localhost:4000/api/order\", payload);\n        console.log(\"Order info sent:\", res.data);\n      } catch (err) {\n        console.error(\"Failed to send order info:\", err);\n      }\n    }\n  },\n  async mounted() {\n    this.reference = localStorage.getItem(\"paystack_reference\");\n    if (!this.reference) {\n      this.loading = false;\n      return;\n    }\n    try {\n      const res = await axios.get(`http://localhost:4000/api/verify/${this.reference}`);\n      if (res.data.data.status === \"success\") {\n        this.verified = true;\n        this.sendOrderInfo(); // Send order info after successful verification\n      }\n    } catch (err) {\n      console.error(\"Verification error:\", err);\n    } finally {\n      this.loading = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","QrcodeVue","name","components","data","reference","verified","loading","methods","sendOrderInfo","localStorage","getItem","payload","contact","email","getContactInfo","phone","userId","getCart","user","tickets","selectedTickets","res","post","console","log","err","error","mounted","get","status"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\PaymentSuccess.vue"],"sourcesContent":["<template>\r\n  <div class=\"container text-center mt-5\">\r\n    <h2>üéâ Payment Status</h2>\r\n\r\n    <div v-if=\"loading\">Verifying payment...</div>\r\n    <div v-else-if=\"verified\">\r\n      <p class=\"text-success\">‚úÖ Payment successful!</p>\r\n      <p><strong>Reference:</strong> {{ reference }}</p>\r\n      <qrcode-vue :value=\"reference\" :size=\"200\" />\r\n    </div>\r\n    <div v-else>\r\n      <p class=\"text-danger\">‚ùå Payment verification failed.</p>\r\n    </div>\r\n\r\n    <router-link to=\"/\" class=\"btn btn-primary mt-3\">Go Home</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport QrcodeVue from \"qrcode.vue\";\r\n\r\nexport default {\r\n  name: \"PaymentSuccess\",\r\n  components: { QrcodeVue },\r\n  data() {\r\n    return {\r\n      reference: \"\",\r\n      verified: false,\r\n      loading: true,\r\n    };\r\n  },\r\n  methods: {\r\n    async sendOrderInfo() {\r\n      try {\r\n        const reference = localStorage.getItem(\"paystack_reference\");\r\n\r\n        const payload = {\r\n          reference, // Paystack reference\r\n          contact: {\r\n            email: this.getContactInfo.email,\r\n            phone: this.getContactInfo.phone,\r\n          },\r\n          userId: this.getCart[0]?.user, // Get user from first cart item\r\n          tickets: this.selectedTickets, // Only selected ones\r\n        };\r\n\r\n        const res = await axios.post(\r\n          \"http://localhost:4000/api/order\",\r\n          payload\r\n        );\r\n        console.log(\"Order info sent:\", res.data);\r\n      } catch (err) {\r\n        console.error(\"Failed to send order info:\", err);\r\n      }\r\n    },\r\n  },\r\n  async mounted() {\r\n    this.reference = localStorage.getItem(\"paystack_reference\");\r\n\r\n    if (!this.reference) {\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `http://localhost:4000/api/verify/${this.reference}`\r\n      );\r\n      if (res.data.data.status === \"success\") {\r\n        this.verified = true;\r\n        this.sendOrderInfo(); // Send order info after successful verification\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error(\"Verification error:\", err);\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n    \r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 500px;\r\n  margin: auto;\r\n}\r\n</style>\r\n"],"mappings":"AAmBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,YAAY;AAElC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IAAEF;EAAU,CAAC;EACzBG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMJ,SAAQ,GAAIK,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;QAE5D,MAAMC,OAAM,GAAI;UACdP,SAAS;UAAE;UACXQ,OAAO,EAAE;YACPC,KAAK,EAAE,IAAI,CAACC,cAAc,CAACD,KAAK;YAChCE,KAAK,EAAE,IAAI,CAACD,cAAc,CAACC;UAC7B,CAAC;UACDC,MAAM,EAAE,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,EAAEC,IAAI;UAAE;UAC/BC,OAAO,EAAE,IAAI,CAACC,eAAe,CAAE;QACjC,CAAC;;QAED,MAAMC,GAAE,GAAI,MAAMtB,KAAK,CAACuB,IAAI,CAC1B,iCAAiC,EACjCX,OACF,CAAC;QACDY,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,GAAG,CAAClB,IAAI,CAAC;MAC3C,EAAE,OAAOsB,GAAG,EAAE;QACZF,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAED,GAAG,CAAC;MAClD;IACF;EACF,CAAC;EACD,MAAME,OAAOA,CAAA,EAAG;IACd,IAAI,CAACvB,SAAQ,GAAIK,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;IAE3D,IAAI,CAAC,IAAI,CAACN,SAAS,EAAE;MACnB,IAAI,CAACE,OAAM,GAAI,KAAK;MACpB;IACF;IAEA,IAAI;MACF,MAAMe,GAAE,GAAI,MAAMtB,KAAK,CAAC6B,GAAG,CACxB,oCAAmC,IAAI,CAACxB,SAAU,EACrD,CAAC;MACD,IAAIiB,GAAG,CAAClB,IAAI,CAACA,IAAI,CAAC0B,MAAK,KAAM,SAAS,EAAE;QACtC,IAAI,CAACxB,QAAO,GAAI,IAAI;QACpB,IAAI,CAACG,aAAa,CAAC,CAAC,EAAE;MACxB;IAEF,EAAE,OAAOiB,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;IAC3C,UAAU;MACR,IAAI,CAACnB,OAAM,GAAI,KAAK;IACtB;EAEF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}