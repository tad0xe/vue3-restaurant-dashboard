{"ast":null,"code":"import { mapGetters, mapActions } from \"vuex\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      selectedStatus: \"\",\n      // Selected filter status\n      searchQuery: \"\",\n      // Search query\n      currentPage: 1,\n      // Current page number\n      rowsPerPage: 10,\n      // Number of rows per page\n      orders: [] // Orders data\n    };\n  },\n\n  computed: {\n    ...mapGetters([\"getOrders\", \"addresses\"]),\n    filteredOrders() {\n      // Filter orders based on selected status and search query\n      return this.getOrders.filter(order => {\n        const statusMatch = this.selectedStatus ? order.status.toLowerCase() === this.selectedStatus.toLowerCase() : true;\n        const searchMatch = this.searchQuery ? order._id.toLowerCase().includes(this.searchQuery.toLowerCase()) : true;\n        return statusMatch && searchMatch;\n      });\n    },\n    paginatedOrders() {\n      const startIndex = (this.currentPage - 1) * this.rowsPerPage;\n      const endIndex = startIndex + this.rowsPerPage;\n      return this.filteredOrders.slice(startIndex, endIndex);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredOrders.length / this.rowsPerPage);\n    }\n  },\n  mounted() {\n    axios.get(\"http://localhost:4000/api/orders\", {\n      headers: {\n        Authorization: `Bearer ${this.getToken}`\n      }\n    }).then(response => {\n      this.orders = response.data.orders;\n      const total = this.orders.reduce((sum, order) => sum + order.price, 0);\n      this.totalPrice = total;\n      console.log(\"Orders fetched:\", this.orders);\n      console.log(\"Total price:\", this.totalPrice);\n    }).catch(error => {\n      console.error(\"Error fetching orders:\", error.response?.data || error);\n    });\n  },\n  methods: {\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    changePage(page) {\n      this.currentPage = page;\n    },\n    applyFilters() {\n      this.currentPage = 1; // Reset to the first page when applying filters\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","axios","data","selectedStatus","searchQuery","currentPage","rowsPerPage","orders","computed","filteredOrders","getOrders","filter","order","statusMatch","status","toLowerCase","searchMatch","_id","includes","paginatedOrders","startIndex","endIndex","slice","totalPages","Math","ceil","length","mounted","get","headers","Authorization","getToken","then","response","total","reduce","sum","price","totalPrice","console","log","catch","error","methods","prevPage","nextPage","changePage","page","applyFilters"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\dashboard\\orderlist.vue"],"sourcesContent":["<template>\r\n  <div class=\"content-ody\">\r\n    <!-- row -->\r\n    <div class=\"container-flui\">\r\n      <div class=\"form-head d-flex mb-3 align-items-start\">\r\n        <div class=\"mr-auto d-none d-lg-block\">\r\n          <h2 class=\"text-black font-w600 mb-0\">Orders</h2>\r\n          <p class=\"mb-0\">Here is your order list data</p>\r\n        </div>\r\n\r\n      </div>\r\n      <div>\r\n        <div class=\"filter row align-items-center\">\r\n          <div class=\"col-auto\">\r\n            <label for=\"statusFilter\">Filter by Status:</label>\r\n          </div>\r\n          <div class=\"col-auto\">\r\n            <select\r\n              id=\"statusFilter\"\r\n              v-model=\"selectedStatus\"\r\n              @change=\"applyFilters\"\r\n              class=\"form-select\"\r\n            >\r\n              <option value=\"\">All</option>\r\n              <option value=\"New Order\">New Order</option>\r\n              <option value=\"on Delivery\">On Delivery</option>\r\n              <option value=\"delivered\">Delivered</option>\r\n              <option value=\"cancelled\">Cancelled</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-auto\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              v-model=\"searchQuery\"\r\n              placeholder=\"Search by Order ID\"\r\n            >\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"table-container\">\r\n          <table class=\"custom-table \">\r\n            <thead>\r\n              <tr>\r\n                <th>Order ID</th>\r\n                <th>Date</th>\r\n                <th>Customer Name</th>\r\n                <th>Deliver to</th>\r\n                <th>Amount</th>\r\n                <th>Status Order</th>\r\n                <th>Update Status</th>\r\n              </tr>\r\n            </thead>\r\n              <tbody class=\"\">\r\n              <tr\r\n                v-for=\"(order, index) in paginatedOrders\"\r\n                :key=\"order.id\"\r\n              >\r\n                <td>{{ order._id }}</td>\r\n                <td>{{ order.created_at }}</td>\r\n                <td>{{ orderOwnerNames[order.owner] }}</td>\r\n                <td>\r\n                  {{ getUserAddress(order.owner)?.streetAddress || 'N/A' }}\r\n                </td>\r\n                <td>\r\n                  <span\r\n                    v-for=\"product in order.products\"\r\n                    :key=\"product.productID._id\"\r\n                  >\r\n                    ${{ product.totalPrice }}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    class=\"btn btn-sm light fs-16\"\r\n                    :class=\"{\r\n                  'btn-success': order.status === 'delivered',\r\n                  'btn-danger': order.status === 'cancelled',\r\n                  'btn-warning': order.status === 'New Order',\r\n                  'btn-primary': order.status === 'on Delivery'\r\n                }\"\r\n                    @click=\"updateOrderStatus(order._id)\"\r\n                  >\r\n                    {{ order.status }}\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <div class=\"dropdown ml-auto text-right\">\r\n                    <div\r\n                      class=\"btn-link\"\r\n                      data-toggle=\"dropdown\"\r\n                    >\r\n                      <svg\r\n                        width=\"24px\"\r\n                        height=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        version=\"1.1\"\r\n                      >\r\n                        <g\r\n                          stroke=\"none\"\r\n                          stroke-width=\"1\"\r\n                          fill=\"none\"\r\n                          fill-rule=\"evenodd\"\r\n                        >\r\n                          <rect\r\n                            x=\"0\"\r\n                            y=\"0\"\r\n                            width=\"24\"\r\n                            height=\"24\"\r\n                          ></rect>\r\n                          <circle\r\n                            fill=\"#000000\"\r\n                            cx=\"5\"\r\n                            cy=\"12\"\r\n                            r=\"2\"\r\n                          ></circle>\r\n                          <circle\r\n                            fill=\"#000000\"\r\n                            cx=\"12\"\r\n                            cy=\"12\"\r\n                            r=\"2\"\r\n                          ></circle>\r\n                          <circle\r\n                            fill=\"#000000\"\r\n                            cx=\"19\"\r\n                            cy=\"12\"\r\n                            r=\"2\"\r\n                          ></circle>\r\n                        </g>\r\n                      </svg>\r\n                    </div>\r\n                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                      <button\r\n                        class=\"btn-success btn btn-sm light fs-4\"\r\n                        @click=\"updateOrderStatus(order._id, 'delivered')\"\r\n                      >\r\n                        Delivered\r\n                      </button>\r\n                      <button\r\n                        class=\"btn-primary btn btn-sm light fs-4\"\r\n                        @click=\"updateOrderStatus(order._id, 'on Delivery')\"\r\n                      >\r\n                        On Delivery\r\n                      </button>\r\n                      <button\r\n                        class=\"btn-danger btn btn-sm light fs-4\"\r\n                        @click=\"updateOrderStatus(order._id, 'cancelled')\"\r\n                      >\r\n                        Cancelled\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"pagination\">\r\n          <button\r\n            class=\"pagination-btn\"\r\n            :disabled=\"currentPage === 1\"\r\n            @click=\"prevPage\"\r\n          >Previous</button>\r\n          <button\r\n            v-for=\"page in totalPages\"\r\n            :key=\"page\"\r\n            class=\"pagination-btn\"\r\n            :class=\"{ active: currentPage === page }\"\r\n            @click=\"changePage(page)\"\r\n          >\r\n            {{ page }}\r\n          </button>\r\n          <button\r\n            class=\"pagination-btn\"\r\n            :disabled=\"currentPage === totalPages\"\r\n            @click=\"nextPage\"\r\n          >Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedStatus: \"\", // Selected filter status\r\n      searchQuery: \"\", // Search query\r\n      currentPage: 1, // Current page number\r\n      rowsPerPage: 10, // Number of rows per page\r\n      orders: [], // Orders data\r\n    };\r\n  },\r\n  computed: {\r\n\r\n    ...mapGetters([\"getOrders\", \"addresses\"]),\r\n    filteredOrders() {\r\n      // Filter orders based on selected status and search query\r\n      return this.getOrders.filter(order => {\r\n        const statusMatch = this.selectedStatus\r\n          ? order.status.toLowerCase() === this.selectedStatus.toLowerCase()\r\n          : true;\r\n        const searchMatch = this.searchQuery\r\n          ? order._id.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n          : true;\r\n        return statusMatch && searchMatch;\r\n      });\r\n    },\r\n    paginatedOrders() {\r\n      const startIndex = (this.currentPage - 1) * this.rowsPerPage;\r\n      const endIndex = startIndex + this.rowsPerPage;\r\n      return this.filteredOrders.slice(startIndex, endIndex);\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredOrders.length / this.rowsPerPage);\r\n    }\r\n  },\r\n  mounted() {\r\n   \r\n    axios\r\n      .get(\"http://localhost:4000/api/orders\", {\r\n        headers: {\r\n          Authorization: `Bearer ${this.getToken}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.orders = response.data.orders;\r\n        const total = this.orders.reduce((sum, order) => sum + order.price, 0);\r\n        this.totalPrice = total;\r\n\r\n        console.log(\"Orders fetched:\", this.orders);\r\n        console.log(\"Total price:\", this.totalPrice);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching orders:\", error.response?.data || error);\r\n      });\r\n\r\n  \r\n  },\r\n  methods: {\r\n   \r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    changePage(page) {\r\n      this.currentPage = page;\r\n    },\r\n    applyFilters() {\r\n      this.currentPage = 1; // Reset to the first page when applying filters\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.custom-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.custom-table th,\r\n.custom-table td {\r\n  padding: 10px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.custom-table th {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.custom-table td button {\r\n  padding: 5px 10px;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.custom-table td .dropdown-menu {\r\n  margin-top: 5px;\r\n}\r\n\r\n.custom-table td .dropdown-menu button {\r\n  width: 100%;\r\n  text-align: left;\r\n}\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.pagination button {\r\n  border: 1px solid #ccc;\r\n  background-color: #fff;\r\n  color: #000;\r\n  padding: 5px 10px;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination button.active {\r\n  background-color: #f4a213;\r\n  color: #fff;\r\n}\r\n\r\n.filter {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.filter label {\r\n  margin-right: 5px;\r\n}\r\n.table-container {\r\n  overflow-x: auto;\r\n}\r\n\r\n.scrollable-tbody {\r\n  display: block;\r\n  white-space: nowrap;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}