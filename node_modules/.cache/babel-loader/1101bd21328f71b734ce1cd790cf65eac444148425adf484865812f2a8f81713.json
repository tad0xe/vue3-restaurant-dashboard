{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-46012776\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"form-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"border-0 img-fluid\",\n  src: \"https://images.unsplash.com/photo-1521737604893-d14cc237f11d\",\n  alt: \"Product Image\"\n})])], -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"names":["class","_createElementVNode","id","src","alt","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\vue3-restaurant-dashboard\\src\\components\\rex.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n  <div class=\"\">\r\n    <div id=\"\">\r\n    <img\r\n                class=\"border-0  img-fluid\"\r\n                src=\"https://images.unsplash.com/photo-1521737604893-d14cc237f11d\"\r\n                alt=\"Product Image\"\r\n              />\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { QuillEditor } from \"@vueup/vue-quill\";\r\nimport \"@vueup/vue-quill/dist/vue-quill.snow.css\";\r\nimport { mapActions } from \"vuex\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n  components: {\r\n    QuillEditor,\r\n  },\r\n  data() {\r\n    return {\r\n      steps: [\"Details\", \"Time/Location\", \"Pricing\", \"Location\"],\r\n      currentStep: 0,\r\n\r\n      // Form fields\r\n      title: \"\",\r\n      previewUrl: null,\r\n      price: null,\r\n      description: \"\",\r\n      location: \"\",\r\n      isVirtual: false,\r\n      eventType: \"single\", // or 'recurring'\r\n      timezone: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      startTime: \"12:00\",\r\n      endTime: \"12:00\",\r\n      startAmPm: \"AM\",\r\n      endAmPm: \"AM\",\r\n      eventFrequency: \"Every day\",\r\n      tickets: [\r\n        { name: \"\", quantity: \"Unlimited\", price: \"Cost\" },\r\n        { name: \"\", quantity: \"Unlimited\", price: \"Free\" },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\"createProduct\"]),\r\n    addTicket(type) {\r\n      const defaultPrice =\r\n        type === \"Paid\" ? \"Cost\" : type === \"Donation\" ? \"Any\" : \"Free\";\r\n      this.tickets.push({\r\n        name: \"\",\r\n        quantity: \"Unlimited\",\r\n        price: defaultPrice,\r\n      });\r\n    },\r\n    removeTicket(index) {\r\n      this.tickets.splice(index, 1);\r\n    },\r\n    duplicateTicket(index) {\r\n      const ticket = this.tickets[index];\r\n      this.tickets.splice(index + 1, 0, { ...ticket });\r\n    },\r\n\r\n    handleImageUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          this.previewUrl = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    },\r\n\r\n    nextStep() {\r\n      if (this.currentStep < this.steps.length - 1) this.currentStep++;\r\n    },\r\n    prevStep() {\r\n      if (this.currentStep > 0) this.currentStep--;\r\n    },\r\n    mounted() {\r\n      try {\r\n        const fileInput = this.$refs.fileInput;\r\n        if (fileInput?.files?.length) {\r\n          for (let i = 0; i < fileInput.files.length; i++) {\r\n            formData.append(\"photos\", fileInput.files[i]);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.warn(\"File input error:\", err);\r\n      }\r\n    },\r\n    async handleSubmit() {\r\n      const fileInput = this.$refs.fileInput;\r\n\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"title\", this.title);\r\n      formData.append(\"description\", this.description);\r\n      formData.append(\"price\", this.price);\r\n      formData.append(\"location\", this.location);\r\n      formData.append(\"isVirtual\", this.isVirtual);\r\n      if (fileInput && fileInput.files.length > 0) {\r\n        for (let i = 0; i < fileInput.files.length; i++) {\r\n          formData.append(\"photos\", fileInput.files[i]);\r\n        }\r\n      }\r\n\r\n      try {\r\n        await this.createProduct(formData);\r\n        Swal.fire(\"Success\", \"Product created!\", \"success\");\r\n      } catch (error) {\r\n        console.error(\"Product creation failed:\", error);\r\n        Swal.fire(\"Error\", \"Failed to create product\", \"error\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-container {\r\n  width: 95%;\r\n  margin: auto;\r\n  margin-top: 30px;\r\n}\r\n\r\n.stepper {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-bottom: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.step {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  flex: 1;\r\n  z-index: 1;\r\n  color: #999;\r\n}\r\n\r\n.step .circle p-4 {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background: #ccc;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.step.active .circle p-4 {\r\n  background: black;\r\n}\r\n\r\n.step.completed .circle p-4 {\r\n  background: #00bfa5;\r\n}\r\n\r\n.step.active {\r\n  color: black;\r\n}\r\n\r\n.step.completed {\r\n  color: #00bfa5;\r\n}\r\n\r\n.label {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n.progress-line {\r\n  position: absolute;\r\n  bottom: 14px;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4px;\r\n  background: #e0e0e0;\r\n  z-index: 0;\r\n}\r\n\r\n.progress-fill {\r\n  height: 4px;\r\n  background: #00bfa5;\r\n  transition: width 0.3s ease-in-out;\r\n  width: 0%;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEAC3BC,mBAAA,CAQM;EARDD,KAAK,EAAC;AAAE,I,aACXC,mBAAA,CAMM;EANDC,EAAE,EAAC;AAAE,I,aACVD,mBAAA,CAIY;EAHAD,KAAK,EAAC,oBAAqB;EAC3BG,GAAG,EAAC,8DAA8D;EAClEC,GAAG,EAAC;;oBALlBC,UAQM,C;;uBATNC,mBAAA,CAUM,OAVNC,UAUM,EAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}