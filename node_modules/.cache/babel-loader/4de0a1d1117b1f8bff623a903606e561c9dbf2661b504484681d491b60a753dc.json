{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"GeoMap\",\n  data() {\n    return {\n      address: \"\",\n      coordinates: null,\n      API_KEY: \"AIzaSyCkbHZXmqyIxjFpN8bMvDeURTmlpEhDHv4\" // ‚ö†Ô∏è Replace with your actual key\n    };\n  },\n\n  computed: {\n    mapUrl() {\n      if (!this.coordinates) return \"\";\n      const {\n        lat,\n        lng\n      } = this.coordinates;\n      return `https://www.google.com/maps/embed/v1/view?key=${this.API_KEY}&center=${lat},${lng}&zoom=15`;\n    }\n  },\n  methods: {\n    async handleGeocode() {\n      try {\n        const response = await axios.get(\"https://maps.googleapis.com/maps/api/geocode/json\", {\n          params: {\n            address: this.address,\n            key: this.API_KEY\n          }\n        });\n        const result = response.data.results[0];\n        if (result) {\n          const {\n            lat,\n            lng\n          } = result.geometry.location;\n          this.coordinates = {\n            lat,\n            lng\n          };\n        } else {\n          alert(\"‚ùå No results found for this address.\");\n          this.coordinates = null;\n        }\n      } catch (error) {\n        console.error(\"Geocoding error:\", error);\n        alert(\"‚ùå Failed to fetch location.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","address","coordinates","API_KEY","computed","mapUrl","lat","lng","methods","handleGeocode","response","get","params","key","result","results","geometry","location","alert","error","console"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\rex.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h2>üìç Geolocation Finder</h2>\r\n\r\n    <form @submit.prevent=\"handleGeocode\" class=\"card p-4 shadow-sm mb-4\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"address\" class=\"form-label\">Enter Address:</label>\r\n        <input\r\n          v-model=\"address\"\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"address\"\r\n          placeholder=\"e.g. 1600 Amphitheatre Parkway, CA\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\">Get Coordinates</button>\r\n    </form>\r\n\r\n    <div v-if=\"coordinates\" class=\"alert alert-success\">\r\n      <strong>Latitude:</strong> {{ coordinates.lat }} <br />\r\n      <strong>Longitude:</strong> {{ coordinates.lng }}\r\n    </div>\r\n\r\n    <div v-if=\"coordinates\" class=\"mt-4\">\r\n      <iframe\r\n        :src=\"mapUrl\"\r\n        width=\"100%\"\r\n        height=\"400\"\r\n        style=\"border:0;\"\r\n        allowfullscreen=\"\"\r\n        loading=\"lazy\"\r\n        referrerpolicy=\"no-referrer-when-downgrade\"\r\n      ></iframe>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"GeoMap\",\r\n  data() {\r\n    return {\r\n      address: \"\",\r\n      coordinates: null,\r\n      API_KEY: \"AIzaSyCkbHZXmqyIxjFpN8bMvDeURTmlpEhDHv4\", // ‚ö†Ô∏è Replace with your actual key\r\n    };\r\n  },\r\n  computed: {\r\n    mapUrl() {\r\n      if (!this.coordinates) return \"\";\r\n      const { lat, lng } = this.coordinates;\r\n      return `https://www.google.com/maps/embed/v1/view?key=${this.API_KEY}&center=${lat},${lng}&zoom=15`;\r\n    },\r\n  },\r\n  methods: {\r\n    async handleGeocode() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://maps.googleapis.com/maps/api/geocode/json\",\r\n          {\r\n            params: {\r\n              address: this.address,\r\n              key: this.API_KEY,\r\n            },\r\n          }\r\n        );\r\n        const result = response.data.results[0];\r\n        if (result) {\r\n          const { lat, lng } = result.geometry.location;\r\n          this.coordinates = { lat, lng };\r\n        } else {\r\n          alert(\"‚ùå No results found for this address.\");\r\n          this.coordinates = null;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Geocoding error:\", error);\r\n        alert(\"‚ùå Failed to fetch location.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 700px;\r\n}\r\n</style>\r\n"],"mappings":"AAwCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE,yCAAyC,CAAE;IACtD,CAAC;EACH,CAAC;;EACDC,QAAQ,EAAE;IACRC,MAAMA,CAAA,EAAG;MACP,IAAI,CAAC,IAAI,CAACH,WAAW,EAAE,OAAO,EAAE;MAChC,MAAM;QAAEI,GAAG;QAAEC;MAAI,IAAI,IAAI,CAACL,WAAW;MACrC,OAAQ,iDAAgD,IAAI,CAACC,OAAQ,WAAUG,GAAI,IAAGC,GAAI,UAAS;IACrG;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAC9B,mDAAmD,EACnD;UACEC,MAAM,EAAE;YACNX,OAAO,EAAE,IAAI,CAACA,OAAO;YACrBY,GAAG,EAAE,IAAI,CAACV;UACZ;QACF,CACF,CAAC;QACD,MAAMW,MAAK,GAAIJ,QAAQ,CAACV,IAAI,CAACe,OAAO,CAAC,CAAC,CAAC;QACvC,IAAID,MAAM,EAAE;UACV,MAAM;YAAER,GAAG;YAAEC;UAAI,IAAIO,MAAM,CAACE,QAAQ,CAACC,QAAQ;UAC7C,IAAI,CAACf,WAAU,GAAI;YAAEI,GAAG;YAAEC;UAAI,CAAC;QACjC,OAAO;UACLW,KAAK,CAAC,sCAAsC,CAAC;UAC7C,IAAI,CAAChB,WAAU,GAAI,IAAI;QACzB;MACF,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;QACxCD,KAAK,CAAC,6BAA6B,CAAC;MACtC;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}