{"ast":null,"code":"import { QrcodeStream } from \"vue-qrcode-reader\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    QrcodeStream\n  },\n  data() {\n    return {\n      reference: null,\n      orderData: null,\n      error: \"\",\n      selectedConstraints: {\n        facingMode: \"environment\"\n      },\n      constraintOptions: [{\n        label: \"Rear camera\",\n        constraints: {\n          facingMode: \"environment\"\n        }\n      }, {\n        label: \"Front camera\",\n        constraints: {\n          facingMode: \"user\"\n        }\n      }],\n      trackFunctionOptions: [],\n      // to be populated in created()\n      trackFunctionSelected: null\n    };\n  },\n  computed: {\n    selectedBarcodeFormats() {\n      return [\"qr_code\"];\n    }\n  },\n  created() {\n    // Initialize track options here where methods are accessible\n    this.trackFunctionOptions = [{\n      text: \"Nothing (default)\",\n      value: undefined\n    }, {\n      text: \"Outline\",\n      value: this.paintOutline\n    }, {\n      text: \"Centered Text\",\n      value: this.paintCenterText\n    }, {\n      text: \"Bounding Box\",\n      value: this.paintBoundingBox\n    }];\n    this.trackFunctionSelected = this.trackFunctionOptions[2]; // Centered Text by default\n\n    console.log(\"‚úÖ Vue component created\");\n  },\n  mounted() {\n    console.log(\"‚úÖ Component mounted\");\n  },\n  methods: {\n    async onDecode(ref) {\n      this.reference = ref;\n      console.log(\"üîç Scanned reference:\", ref);\n      try {\n        const res = await axios.get(`http://localhost:4000/api/order/${ref}`);\n        console.log(\"üì¶ API response:\", res.data);\n        if (res.data && res.data.success) {\n          this.orderData = res.data.order;\n        } else {\n          alert(\"‚ùå Order not found: \" + (res.data.error || \"Unknown error\"));\n          this.orderData = null;\n        }\n      } catch (err) {\n        alert(\"‚ö†Ô∏è Error fetching order: \" + err.message);\n        console.error(\"‚ùó Fetch error:\", err);\n        this.orderData = null;\n      }\n    },\n    onInit(promise) {\n      promise.then(() => {\n        console.log(\"üì∑ Camera initialized\");\n        this.error = \"\";\n      }).catch(e => {\n        console.error(\"üö´ Camera error:\", e);\n        this.error = e.message || \"Camera initialization failed\";\n      });\n    },\n    onError(err) {\n      console.error(\"‚ö†Ô∏è Error event:\", err);\n      this.error = err.message || \"Unknown error\";\n    },\n    async onCameraReady() {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoDevices = devices.filter(d => d.kind === \"videoinput\");\n\n        // Add detected cameras to selection options\n        this.constraintOptions = [{\n          label: \"Rear camera\",\n          constraints: {\n            facingMode: \"environment\"\n          }\n        }, {\n          label: \"Front camera\",\n          constraints: {\n            facingMode: \"user\"\n          }\n        }, ...videoDevices.map(({\n          deviceId,\n          label\n        }) => ({\n          label: `${label || \"Camera\"} (ID: ${deviceId})`,\n          constraints: {\n            deviceId\n          }\n        }))];\n        console.log(\"üì∏ Available cameras:\", this.constraintOptions);\n        this.error = \"\";\n      } catch (err) {\n        console.error(\"‚ùå Failed to enumerate devices\", err);\n        this.error = \"Failed to enumerate devices\";\n      }\n    },\n    paintOutline(detectedCodes, ctx) {\n      for (const detectedCode of detectedCodes) {\n        const [firstPoint, ...otherPoints] = detectedCode.cornerPoints;\n        ctx.strokeStyle = \"red\";\n        ctx.beginPath();\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        for (const {\n          x,\n          y\n        } of otherPoints) {\n          ctx.lineTo(x, y);\n        }\n        ctx.closePath();\n        ctx.stroke();\n      }\n    },\n    paintBoundingBox(detectedCodes, ctx) {\n      for (const detectedCode of detectedCodes) {\n        const {\n          boundingBox: {\n            x,\n            y,\n            width,\n            height\n          }\n        } = detectedCode;\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = \"#007bff\";\n        ctx.strokeRect(x, y, width, height);\n      }\n    },\n    paintCenterText(detectedCodes, ctx) {\n      for (const detectedCode of detectedCodes) {\n        const {\n          boundingBox,\n          rawValue\n        } = detectedCode;\n        const centerX = boundingBox.x + boundingBox.width / 2;\n        const centerY = boundingBox.y + boundingBox.height / 2;\n        const fontSize = Math.max(12, 50 * boundingBox.width / ctx.canvas.width);\n        ctx.font = `bold ${fontSize}px sans-serif`;\n        ctx.textAlign = \"center\";\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = \"#35495e\";\n        ctx.strokeText(rawValue, centerX, centerY);\n        ctx.fillStyle = \"#5cb984\";\n        ctx.fillText(rawValue, centerX, centerY);\n      }\n    }\n  }\n};","map":{"version":3,"names":["QrcodeStream","axios","components","data","reference","orderData","error","selectedConstraints","facingMode","constraintOptions","label","constraints","trackFunctionOptions","trackFunctionSelected","computed","selectedBarcodeFormats","created","text","value","undefined","paintOutline","paintCenterText","paintBoundingBox","console","log","mounted","methods","onDecode","ref","res","get","success","order","alert","err","message","onInit","promise","then","catch","e","onError","onCameraReady","devices","navigator","mediaDevices","enumerateDevices","videoDevices","filter","d","kind","map","deviceId","detectedCodes","ctx","detectedCode","firstPoint","otherPoints","cornerPoints","strokeStyle","beginPath","moveTo","x","y","lineTo","closePath","stroke","boundingBox","width","height","lineWidth","strokeRect","rawValue","centerX","centerY","fontSize","Math","max","canvas","font","textAlign","strokeText","fillStyle","fillText"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\rex.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Camera selection -->\r\n    <p>\r\n      Select Camera:\r\n      <select v-model=\"selectedConstraints\">\r\n        <option\r\n          v-for=\"option in constraintOptions\"\r\n          :key=\"option.label\"\r\n          :value=\"option.constraints\"\r\n        >\r\n          {{ option.label }}\r\n        </option>\r\n      </select>\r\n    </p>\r\n\r\n    <!-- Track function selection -->\r\n    <p>\r\n      Highlight mode:\r\n      <select v-model=\"trackFunctionSelected\">\r\n        <option\r\n          v-for=\"option in trackFunctionOptions\"\r\n          :key=\"option.text\"\r\n          :value=\"option\"\r\n        >\r\n          {{ option.text }}\r\n        </option>\r\n      </select>\r\n    </p>\r\n\r\n    <!-- QR Scanner -->\r\n    <qrcode-stream\r\n      :constraints=\"selectedConstraints\"\r\n      :track=\"trackFunctionSelected.value\"\r\n      :formats=\"selectedBarcodeFormats\"\r\n      @decode=\"onDecode\"\r\n      @init=\"onInit\"\r\n      @error=\"onError\"\r\n      @camera-on=\"onCameraReady\"\r\n    />\r\n\r\n    <!-- Error display -->\r\n    <p v-if=\"error\" style=\"color: red; font-weight: bold;\">Error: {{ error }}</p>\r\n\r\n    <!-- Scanned Reference -->\r\n    <p v-if=\"reference\">Scanned Reference: <strong>{{ reference }}</strong></p>\r\n\r\n    <!-- Order Info -->\r\n    <div v-if=\"orderData\">\r\n      <h3>üéü Order Details</h3>\r\n      <p><strong>Title:</strong> {{ orderData.title }}</p>\r\n      <p><strong>Email:</strong> {{ orderData.contact.email }}</p>\r\n      <p><strong>Phone:</strong> {{ orderData.contact.phone }}</p>\r\n      <p><strong>Price:</strong> ‚Ç¶{{ orderData.price }}</p>\r\n      <ul>\r\n        <li v-for=\"ticket in orderData.tickets\" :key=\"ticket.name\">\r\n          {{ ticket.name }} √ó {{ ticket.quantity }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { QrcodeStream } from \"vue-qrcode-reader\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  components: { QrcodeStream },\r\n  data() {\r\n    return {\r\n      reference: null,\r\n      orderData: null,\r\n      error: \"\",\r\n      selectedConstraints: { facingMode: \"environment\" },\r\n      constraintOptions: [\r\n        { label: \"Rear camera\", constraints: { facingMode: \"environment\" } },\r\n        { label: \"Front camera\", constraints: { facingMode: \"user\" } }\r\n      ],\r\n      trackFunctionOptions: [], // to be populated in created()\r\n      trackFunctionSelected: null,\r\n    };\r\n  },\r\n  computed: {\r\n    selectedBarcodeFormats() {\r\n      return [\"qr_code\"];\r\n    }\r\n  },\r\n  created() {\r\n    // Initialize track options here where methods are accessible\r\n    this.trackFunctionOptions = [\r\n      { text: \"Nothing (default)\", value: undefined },\r\n      { text: \"Outline\", value: this.paintOutline },\r\n      { text: \"Centered Text\", value: this.paintCenterText },\r\n      { text: \"Bounding Box\", value: this.paintBoundingBox }\r\n    ];\r\n    this.trackFunctionSelected = this.trackFunctionOptions[2]; // Centered Text by default\r\n\r\n    console.log(\"‚úÖ Vue component created\");\r\n  },\r\n  mounted() {\r\n    console.log(\"‚úÖ Component mounted\");\r\n  },\r\n  methods: {\r\n    async onDecode(ref) {\r\n      this.reference = ref;\r\n      console.log(\"üîç Scanned reference:\", ref);\r\n      try {\r\n        const res = await axios.get(`http://localhost:4000/api/order/${ref}`);\r\n        console.log(\"üì¶ API response:\", res.data);\r\n        if (res.data && res.data.success) {\r\n          this.orderData = res.data.order;\r\n        } else {\r\n          alert(\"‚ùå Order not found: \" + (res.data.error || \"Unknown error\"));\r\n          this.orderData = null;\r\n        }\r\n      } catch (err) {\r\n        alert(\"‚ö†Ô∏è Error fetching order: \" + err.message);\r\n        console.error(\"‚ùó Fetch error:\", err);\r\n        this.orderData = null;\r\n      }\r\n    },\r\n\r\n    onInit(promise) {\r\n      promise\r\n        .then(() => {\r\n          console.log(\"üì∑ Camera initialized\");\r\n          this.error = \"\";\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"üö´ Camera error:\", e);\r\n          this.error = e.message || \"Camera initialization failed\";\r\n        });\r\n    },\r\n\r\n    onError(err) {\r\n      console.error(\"‚ö†Ô∏è Error event:\", err);\r\n      this.error = err.message || \"Unknown error\";\r\n    },\r\n\r\n    async onCameraReady() {\r\n      try {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const videoDevices = devices.filter((d) => d.kind === \"videoinput\");\r\n\r\n        // Add detected cameras to selection options\r\n        this.constraintOptions = [\r\n          { label: \"Rear camera\", constraints: { facingMode: \"environment\" } },\r\n          { label: \"Front camera\", constraints: { facingMode: \"user\" } },\r\n          ...videoDevices.map(({ deviceId, label }) => ({\r\n            label: `${label || \"Camera\"} (ID: ${deviceId})`,\r\n            constraints: { deviceId }\r\n          }))\r\n        ];\r\n        console.log(\"üì∏ Available cameras:\", this.constraintOptions);\r\n        this.error = \"\";\r\n      } catch (err) {\r\n        console.error(\"‚ùå Failed to enumerate devices\", err);\r\n        this.error = \"Failed to enumerate devices\";\r\n      }\r\n    },\r\n\r\n    paintOutline(detectedCodes, ctx) {\r\n      for (const detectedCode of detectedCodes) {\r\n        const [firstPoint, ...otherPoints] = detectedCode.cornerPoints;\r\n        ctx.strokeStyle = \"red\";\r\n        ctx.beginPath();\r\n        ctx.moveTo(firstPoint.x, firstPoint.y);\r\n        for (const { x, y } of otherPoints) {\r\n          ctx.lineTo(x, y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n      }\r\n    },\r\n\r\n    paintBoundingBox(detectedCodes, ctx) {\r\n      for (const detectedCode of detectedCodes) {\r\n        const {\r\n          boundingBox: { x, y, width, height }\r\n        } = detectedCode;\r\n        ctx.lineWidth = 2;\r\n        ctx.strokeStyle = \"#007bff\";\r\n        ctx.strokeRect(x, y, width, height);\r\n      }\r\n    },\r\n\r\n    paintCenterText(detectedCodes, ctx) {\r\n      for (const detectedCode of detectedCodes) {\r\n        const { boundingBox, rawValue } = detectedCode;\r\n        const centerX = boundingBox.x + boundingBox.width / 2;\r\n        const centerY = boundingBox.y + boundingBox.height / 2;\r\n        const fontSize = Math.max(\r\n          12,\r\n          (50 * boundingBox.width) / ctx.canvas.width\r\n        );\r\n        ctx.font = `bold ${fontSize}px sans-serif`;\r\n        ctx.textAlign = \"center\";\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = \"#35495e\";\r\n        ctx.strokeText(rawValue, centerX, centerY);\r\n        ctx.fillStyle = \"#5cb984\";\r\n        ctx.fillText(rawValue, centerX, centerY);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}