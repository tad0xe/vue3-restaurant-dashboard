{"ast":null,"code":"import 'quill/dist/quill.core.css';\nimport 'quill/dist/quill.snow.css';\nimport 'quill/dist/quill.bubble.css';\nimport Quill from 'quill';\nimport { onMounted, ref, watch, onUnmounted, onBeforeUnmount } from 'vue';\nconst defaultOptions = {\n  theme: 'snow',\n  boundary: document.body,\n  modules: {\n    toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n      header: 1\n    }, {\n      header: 2\n    }], [{\n      list: 'ordered'\n    }, {\n      list: 'bullet'\n    }], [{\n      script: 'sub'\n    }, {\n      script: 'super'\n    }], [{\n      indent: '-1'\n    }, {\n      indent: '+1'\n    }], [{\n      direction: 'rtl'\n    }], [{\n      size: ['small', false, 'large', 'huge']\n    }], [{\n      header: [1, 2, 3, 4, 5, 6, false]\n    }], [{\n      color: []\n    }, {\n      background: []\n    }], [{\n      font: []\n    }], [{\n      align: []\n    }], ['clean'], ['link', 'image', 'video']]\n  },\n  placeholder: 'Insert content here ...',\n  readOnly: false\n};\nexport default {\n  name: 'quill-editor',\n  props: {\n    content: String,\n    value: String,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Object,\n      required: false,\n      default: () => ({})\n    }\n  },\n  emits: ['ready', 'change', 'input', 'blur', 'focus', 'update:value'],\n  setup(props, context) {\n    const state = {\n      editorOption: {},\n      quill: null\n    };\n    let _content = '';\n    watch(() => props.value, val => {\n      if (state.quill) {\n        if (val && val !== _content) {\n          _content = val;\n          state.quill.pasteHTML(val);\n        } else if (!val) {\n          state.quill.setText('');\n        }\n      }\n    });\n    watch(() => props.content, val => {\n      if (state.quill) {\n        if (val && val !== _content) {\n          _content = val;\n          state.quill.pasteHTML(val);\n        } else if (!val) {\n          state.quill.setText('');\n        }\n      }\n    });\n    watch(() => props.disabled, val => {\n      if (state.quill) {\n        state.quill.enable(!val);\n      }\n    });\n    const editor = ref(null);\n    const mergeOptions = (def, custom) => {\n      for (const key in custom) {\n        if (!def[key] || key !== 'modules') {\n          def[key] = custom[key];\n        } else {\n          mergeOptions(def[key], custom[key]);\n        }\n      }\n      return def;\n    };\n    const initialize = () => {\n      if (editor.value) {\n        // Options\n        state.editorOption = mergeOptions(defaultOptions, props.options);\n        state.editorOption.readOnly = props.disabled ? true : false;\n        // Instance\n        state.quill = new Quill(editor.value, state.editorOption);\n        // console.log('intilized')\n\n        // Set editor content\n        if (props.value) {\n          state.quill.pasteHTML(props.value);\n        }\n\n        // Mark model as touched if editor lost focus\n        state.quill.on('selection-change', range => {\n          if (!range) {\n            context.emit('blur', state.quill);\n          } else {\n            context.emit('focus', state.quill);\n          }\n        });\n        // Update model if text changes\n        state.quill.on('text-change', () => {\n          // diabled editor after content initialized\n          if (props.disabled) {\n            state.quill.enable(false);\n          }\n          let html = editor.value.children[0].innerHTML;\n          const quill = state.quill;\n          const text = state.quill.getText();\n          if (html === '<p><br></p>') html = '';\n          _content = html;\n          context.emit('update:value', _content);\n          context.emit('change', {\n            html,\n            text,\n            quill\n          });\n        });\n\n        // Emit ready event\n        context.emit('ready', state.quill);\n      }\n    };\n    onBeforeUnmount(() => {\n      const editorToolbar = editor.value.previousSibling;\n      if (editorToolbar && editorToolbar.nodeType === 1 && editorToolbar.className.indexOf('ql-toolbar') > -1) {\n        editorToolbar.parentNode.removeChild(editorToolbar);\n      }\n    });\n    onMounted(() => {\n      initialize();\n    });\n    onUnmounted(() => {\n      state.quill = null;\n    });\n    return {\n      editor\n    };\n  }\n};","map":{"version":3,"names":["Quill","onMounted","ref","watch","onUnmounted","onBeforeUnmount","defaultOptions","theme","boundary","document","body","modules","toolbar","header","list","script","indent","direction","size","color","background","font","align","placeholder","readOnly","name","props","content","String","value","disabled","type","Boolean","default","options","Object","required","emits","setup","context","state","editorOption","quill","_content","val","pasteHTML","setText","enable","editor","mergeOptions","def","custom","key","initialize","on","range","emit","html","children","innerHTML","text","getText","editorToolbar","previousSibling","nodeType","className","indexOf","parentNode","removeChild"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\vue3-restaurant-dashboard\\node_modules\\vue3-quill\\src\\editor.vue"],"sourcesContent":["<template>\r\n  <section ref=\"editor\"></section>\r\n</template>\r\n\r\n<script>\r\nimport 'quill/dist/quill.core.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport 'quill/dist/quill.bubble.css'\r\n\r\nimport Quill from 'quill'\r\nimport { onMounted, ref, watch, onUnmounted, onBeforeUnmount } from 'vue'\r\n\r\nconst defaultOptions = {\r\n  theme: 'snow',\r\n  boundary: document.body,\r\n  modules: {\r\n    toolbar: [\r\n      ['bold', 'italic', 'underline', 'strike'],\r\n      ['blockquote', 'code-block'],\r\n      [{ header: 1 }, { header: 2 }],\r\n      [{ list: 'ordered' }, { list: 'bullet' }],\r\n      [{ script: 'sub' }, { script: 'super' }],\r\n      [{ indent: '-1' }, { indent: '+1' }],\r\n      [{ direction: 'rtl' }],\r\n      [{ size: ['small', false, 'large', 'huge'] }],\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n      [{ color: [] }, { background: [] }],\r\n      [{ font: [] }],\r\n      [{ align: [] }],\r\n      ['clean'],\r\n      ['link', 'image', 'video']\r\n    ]\r\n  },\r\n  placeholder: 'Insert content here ...',\r\n  readOnly: false\r\n}\r\nexport default {\r\n  name: 'quill-editor',\r\n  props: {\r\n    content: String,\r\n    value: String,\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    options: {\r\n      type: Object,\r\n      required: false,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  emits: ['ready', 'change', 'input', 'blur', 'focus', 'update:value'],\r\n  setup(props, context) {\r\n    const state = {\r\n      editorOption: {},\r\n      quill: null\r\n    }\r\n\r\n    let _content = ''\r\n\r\n    watch(\r\n      () => props.value,\r\n      val => {\r\n        if (state.quill) {\r\n          if (val && val !== _content) {\r\n            _content = val\r\n            state.quill.pasteHTML(val)\r\n          } else if (!val) {\r\n            state.quill.setText('')\r\n          }\r\n        }\r\n      }\r\n    )\r\n\r\n    watch(\r\n      () => props.content,\r\n      val => {\r\n        if (state.quill) {\r\n          if (val && val !== _content) {\r\n            _content = val\r\n            state.quill.pasteHTML(val)\r\n          } else if (!val) {\r\n            state.quill.setText('')\r\n          }\r\n        }\r\n      }\r\n    )\r\n\r\n    watch(\r\n      () => props.disabled,\r\n      val => {\r\n        if (state.quill) {\r\n          state.quill.enable(!val)\r\n        }\r\n      }\r\n    )\r\n\r\n    const editor = ref(null)\r\n\r\n    const mergeOptions = (def, custom) => {\r\n      for (const key in custom) {\r\n        if (!def[key] || key !== 'modules') {\r\n          def[key] = custom[key]\r\n        } else {\r\n          mergeOptions(def[key], custom[key])\r\n        }\r\n      }\r\n      return def\r\n    }\r\n\r\n    const initialize = () => {\r\n      if (editor.value) {\r\n        // Options\r\n        state.editorOption = mergeOptions(defaultOptions, props.options)\r\n        state.editorOption.readOnly = props.disabled ? true : false\r\n        // Instance\r\n        state.quill = new Quill(editor.value, state.editorOption)\r\n        // console.log('intilized')\r\n\r\n        // Set editor content\r\n        if (props.value) {\r\n          state.quill.pasteHTML(props.value)\r\n        }\r\n\r\n        // Mark model as touched if editor lost focus\r\n        state.quill.on('selection-change', range => {\r\n          if (!range) {\r\n            context.emit('blur', state.quill)\r\n          } else {\r\n            context.emit('focus', state.quill)\r\n          }\r\n        })\r\n        // Update model if text changes\r\n        state.quill.on('text-change', () => {\r\n          // diabled editor after content initialized\r\n          if (props.disabled) {\r\n            state.quill.enable(false)\r\n          }\r\n          let html = editor.value.children[0].innerHTML\r\n          const quill = state.quill\r\n          const text = state.quill.getText()\r\n          if (html === '<p><br></p>') html = ''\r\n          _content = html\r\n          context.emit('update:value', _content)\r\n          context.emit('change', { html, text, quill })\r\n        })\r\n\r\n        // Emit ready event\r\n        context.emit('ready', state.quill)\r\n      }\r\n    }\r\n\r\n    onBeforeUnmount(() => {\r\n      const editorToolbar = editor.value.previousSibling\r\n      if (editorToolbar && editorToolbar.nodeType === 1 && editorToolbar.className.indexOf('ql-toolbar') > -1) {\r\n        editorToolbar.parentNode.removeChild(editorToolbar)\r\n      }\r\n    })\r\n\r\n    onMounted(() => {\r\n      initialize()\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      state.quill = null\r\n    })\r\n\r\n    return { editor }\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}