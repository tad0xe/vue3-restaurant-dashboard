{"ast":null,"code":"import { mapGetters } from \"vuex\";\nimport VueApexCharts from \"vue3-apexcharts\";\nexport default {\n  components: {\n    apexchart: VueApexCharts\n  },\n  computed: {\n    ...mapGetters([\"getOrders\"]),\n    filteredNewOrderCount() {\n      return this.filteredData.filter(order => order.status === \"New Order\").length;\n    },\n    filteredDeliveredCount() {\n      return this.filteredData.filter(order => order.status === \"delivered\").length;\n    },\n    filteredCancelledCount() {\n      return this.filteredData.filter(order => order.status === \"cancelled\").length;\n    },\n    filteredOnDeliveryCount() {\n      return this.filteredData.filter(order => order.status === \"on Delivery\").length;\n    },\n    filteredData() {\n      const today = new Date();\n      const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const monthAgo = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n      if (this.filter === \"daily\") {\n        const filteredOrders = this.getOrders.filter(order => new Date(order.created_at).toISOString().substr(0, 10) === today.toISOString().substr(0, 10));\n        // console.log(\"Filtered Orders (Daily):\", filteredOrders);\n        return filteredOrders;\n      } else if (this.filter === \"weekly\") {\n        const filteredOrders = this.getOrders.filter(order => new Date(order.created_at).getTime() >= weekAgo.getTime() && new Date(order.created_at).getTime() <= today.getTime());\n        //console.log(\"Filtered Orders (Weekly):\", filteredOrders);\n        return filteredOrders;\n      } else if (this.filter === \"monthly\") {\n        const filteredOrders = this.getOrders.filter(order => new Date(order.created_at).getTime() >= monthAgo.getTime() && new Date(order.created_at).getTime() <= today.getTime());\n        //console.log(\"Filtered Orders (Monthly):\", filteredOrders);\n        return filteredOrders;\n      }\n    },\n    chartOptions() {\n      return {\n        labels: [\"Delivered\", \"Cancelled\", \"On Delivery\"],\n        responsive: [{\n          breakpoint: 576,\n          // Breakpoint for small screens (e.g., mobile devices)\n          options: {\n            chart: {\n              width: \"100%\"\n            }\n          }\n        }, {\n          breakpoint: 768,\n          // Breakpoint for medium screens (e.g., tablets)\n          options: {\n            chart: {\n              width: \"80%\"\n            }\n          }\n        }, {\n          breakpoint: undefined,\n          // Default options for all other screens\n          options: {\n            chart: {\n              width: \"60%\"\n            }\n          }\n        }]\n      };\n    },\n    chartSeries() {\n      const statusCount = {\n        delivered: 0,\n        cancelled: 0,\n        onDelivery: 0\n      };\n      this.filteredData.forEach(order => {\n        if (order.status === \"delivered\") {\n          statusCount.delivered++;\n        } else if (order.status === \"cancelled\") {\n          statusCount.cancelled++;\n        } else if (order.status === \"on Delivery\") {\n          statusCount.onDelivery++;\n        }\n      });\n      return Object.values(statusCount);\n    }\n  },\n  data() {\n    return {\n      filter: \"monthly\"\n    };\n  },\n  watch: {\n    filter() {\n      this.updateChart();\n    },\n    getOrders() {\n      this.updateChart();\n    }\n  },\n  mounted() {\n    this.$store.dispatch(\"fetchOrders\");\n  },\n  methods: {\n    setFilter(filter) {\n      this.filter = filter;\n    },\n    updateChart() {\n      // The chart is automatically updated via computed properties\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","VueApexCharts","components","apexchart","computed","filteredNewOrderCount","filteredData","filter","order","status","length","filteredDeliveredCount","filteredCancelledCount","filteredOnDeliveryCount","today","Date","weekAgo","getTime","monthAgo","getFullYear","getMonth","getDate","filteredOrders","getOrders","created_at","toISOString","substr","chartOptions","labels","responsive","breakpoint","options","chart","width","undefined","chartSeries","statusCount","delivered","cancelled","onDelivery","forEach","Object","values","data","watch","updateChart","mounted","$store","dispatch","methods","setFilter"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\vue3-restaurant-dashboard\\src\\components\\charts\\pieChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Filter buttons -->\r\n    <div>\r\n      <div class=\" text-start border-0 pb-0 d-sm-flex d-block\">\r\n        <div>\r\n          <h4 class=\"card-title mb-1\">Orders Summary</h4>\r\n          <small class=\"mb-0\">Lorem ipsum dolor sit amet, consectetur</small>\r\n        </div>\r\n        <div class=\"card-action card-tabs mt-3 mt-sm-0\">\r\n          <ul class=\"nav nav-tabs\" role=\"tablist\">\r\n            <li class=\"nav-item\">\r\n              <a\r\n                class=\"nav-link\"\r\n                :class=\"{ active: filter === 'monthly' }\"\r\n                @click=\"setFilter('monthly')\"\r\n                role=\"tab\"\r\n              >\r\n                Monthly\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a\r\n                class=\"nav-link\"\r\n                :class=\"{ active: filter === 'weekly' }\"\r\n                @click=\"setFilter('weekly')\"\r\n                role=\"tab\"\r\n              >\r\n                Weekly\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a\r\n                class=\"nav-link\"\r\n                :class=\"{ active: filter === 'daily' }\"\r\n                @click=\"setFilter('daily')\"\r\n                role=\"tab\"\r\n              >\r\n                Today\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body orders-summary\">\r\n        <div class=\"d-flex order-manage p-3 align-items-center mb-4\">\r\n          <a class=\"btn fs-22 py-1 btn-success px-4 mr-3\">{{\r\n            filteredNewOrderCount\r\n          }}</a>\r\n          <div>\r\n            <div class=\"mb-0 header-title text-sm\">\r\n              New Orders <i class=\"fa fa-circle text-success ml-1 fs-15\"></i>\r\n            </div>\r\n          </div>\r\n          <router-link\r\n            to=\"/dash?activeTab=orders\"\r\n            class=\"ml-auto text-primary font-w500 text-sm\"\r\n          >\r\n            Manage orders <i class=\"ti-angle-right ml-1\"></i>\r\n          </router-link>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-4 mb-4\">\r\n            <div class=\"border px-3 py-3 rounded-xl\">\r\n              <h2 class=\"fs-32 font-w600 counter\">\r\n                {{ filteredOnDeliveryCount }}\r\n              </h2>\r\n              <p class=\"fs-16 mb-0\">On Delivery</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-4 mb-4\">\r\n            <div class=\"border px-3 py-3 rounded-xl\">\r\n              <h2 class=\"fs-32 font-w600 counter\">\r\n                {{ filteredDeliveredCount }}\r\n              </h2>\r\n              <p class=\"fs-16 mb-0\">Delivered</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-4 mb-4\">\r\n            <div class=\"border px-3 py-3 rounded-xl\">\r\n              <h2 class=\"fs-32 font-w600 counter\">\r\n                {{ filteredCancelledCount }}\r\n              </h2>\r\n              <p class=\"fs-16 mb-0\">Canceled</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div class=\"col-sm-4\">\r\n            <apexchart\r\n              width=\"500\"\r\n              type=\"pie\"\r\n              :options=\"chartOptions\"\r\n              :series=\"chartSeries\"\r\n            ></apexchart>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\n\r\nimport VueApexCharts from \"vue3-apexcharts\";\r\n\r\nexport default {\r\n  components: {\r\n    apexchart: VueApexCharts,\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"getOrders\"]),\r\n    filteredNewOrderCount() {\r\n      return this.filteredData.filter((order) => order.status === \"New Order\")\r\n        .length;\r\n    },\r\n    filteredDeliveredCount() {\r\n      return this.filteredData.filter((order) => order.status === \"delivered\")\r\n        .length;\r\n    },\r\n    filteredCancelledCount() {\r\n      return this.filteredData.filter((order) => order.status === \"cancelled\")\r\n        .length;\r\n    },\r\n    filteredOnDeliveryCount() {\r\n      return this.filteredData.filter((order) => order.status === \"on Delivery\")\r\n        .length;\r\n    },\r\n    filteredData() {\r\n      const today = new Date();\r\n      const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n      const monthAgo = new Date(\r\n        today.getFullYear(),\r\n        today.getMonth() - 1,\r\n        today.getDate()\r\n      );\r\n\r\n      if (this.filter === \"daily\") {\r\n        const filteredOrders = this.getOrders.filter(\r\n          (order) =>\r\n            new Date(order.created_at).toISOString().substr(0, 10) ===\r\n            today.toISOString().substr(0, 10)\r\n        );\r\n        // console.log(\"Filtered Orders (Daily):\", filteredOrders);\r\n        return filteredOrders;\r\n      } else if (this.filter === \"weekly\") {\r\n        const filteredOrders = this.getOrders.filter(\r\n          (order) =>\r\n            new Date(order.created_at).getTime() >= weekAgo.getTime() &&\r\n            new Date(order.created_at).getTime() <= today.getTime()\r\n        );\r\n        //console.log(\"Filtered Orders (Weekly):\", filteredOrders);\r\n        return filteredOrders;\r\n      } else if (this.filter === \"monthly\") {\r\n        const filteredOrders = this.getOrders.filter(\r\n          (order) =>\r\n            new Date(order.created_at).getTime() >= monthAgo.getTime() &&\r\n            new Date(order.created_at).getTime() <= today.getTime()\r\n        );\r\n        //console.log(\"Filtered Orders (Monthly):\", filteredOrders);\r\n        return filteredOrders;\r\n      }\r\n    },\r\n    chartOptions() {\r\n      return {\r\n        labels: [\"Delivered\", \"Cancelled\", \"On Delivery\"],\r\n        responsive: [\r\n          {\r\n            breakpoint: 576, // Breakpoint for small screens (e.g., mobile devices)\r\n            options: {\r\n              chart: {\r\n                width: \"100%\",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            breakpoint: 768, // Breakpoint for medium screens (e.g., tablets)\r\n            options: {\r\n              chart: {\r\n                width: \"80%\",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            breakpoint: undefined, // Default options for all other screens\r\n            options: {\r\n              chart: {\r\n                width: \"60%\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n\r\n    chartSeries() {\r\n      const statusCount = {\r\n        delivered: 0,\r\n        cancelled: 0,\r\n        onDelivery: 0,\r\n      };\r\n\r\n      this.filteredData.forEach((order) => {\r\n        if (order.status === \"delivered\") {\r\n          statusCount.delivered++;\r\n        } else if (order.status === \"cancelled\") {\r\n          statusCount.cancelled++;\r\n        } else if (order.status === \"on Delivery\") {\r\n          statusCount.onDelivery++;\r\n        }\r\n      });\r\n\r\n      return Object.values(statusCount);\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      filter: \"monthly\",\r\n    };\r\n  },\r\n  watch: {\r\n    filter() {\r\n      this.updateChart();\r\n    },\r\n    getOrders() {\r\n      this.updateChart();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(\"fetchOrders\");\r\n  },\r\n  methods: {\r\n    setFilter(filter) {\r\n      this.filter = filter;\r\n    },\r\n    updateChart() {\r\n      // The chart is automatically updated via computed properties\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}