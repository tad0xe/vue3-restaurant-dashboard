{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from \"vuex\";\nimport { googleSdkLoaded } from \"vue3-google-login\";\nimport Swal from \"sweetalert2\";\nimport jwt_decode from \"jwt-decode\";\nexport default {\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    ...mapActions([\"LOGIN_USER\", \"sendCodeToBackend\"]),\n    login() {\n      googleSdkLoaded(google => {\n        google.accounts.oauth2.initCodeClient({\n          client_id: \"58730156701-d27fqgjbhmuqt974hav87of8hofgi6i0.apps.googleusercontent.com\",\n          scope: \"email profile openid\",\n          redirect_uri: \"https://restaurant-n54j.onrender.com/auth/callback\",\n          callback: response => {\n            if (response.code) {\n              this.sendCodeToBackend(response.code);\n            }\n          }\n        }).requestCode();\n      });\n    },\n    loginUser() {\n      const payload = {\n        email: this.email,\n        password: this.password\n      };\n      this.LOGIN_USER(payload).then(response => {\n        const decodedToken = jwt_decode(response.token);\n        // console.log(decodedToken);\n        // Access the decoded token properties\n        const isAdmin = decodedToken.isAdmin;\n        Swal.fire(\"login successful\");\n\n        // Redirect based on user role\n        //console.log(\"isAdmin:\", isAdmin);\n        this.$router.push('/');\n      }).catch(err => {\n        const message = err.message;\n        Swal.fire(\"Oh oo!\", `${message}`, \"error\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapActions","googleSdkLoaded","Swal","jwt_decode","data","name","email","password","methods","login","google","accounts","oauth2","initCodeClient","client_id","scope","redirect_uri","callback","response","code","sendCodeToBackend","requestCode","loginUser","payload","LOGIN_USER","then","decodedToken","token","isAdmin","fire","$router","push","catch","err","message"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\vue3-restaurant-dashboard\\src\\components\\auth\\Login.vue"],"sourcesContent":["<template>\r\n\r\n <div><div class=\"row\">\r\n  <div class=\"col\">\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"First name\" aria-label=\"First name\">\r\n  </div>\r\n  <div class=\"col\">\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"Last name\" aria-label=\"Last name\">\r\n  </div>\r\n</div></div>\r\n</template>\r\n<script>\r\n\r\nimport { mapActions } from \"vuex\";\r\nimport { googleSdkLoaded } from \"vue3-google-login\";\r\nimport Swal from \"sweetalert2\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\"LOGIN_USER\", \"sendCodeToBackend\"]),\r\n    login() {\r\n      googleSdkLoaded(google => {\r\n        google.accounts.oauth2\r\n          .initCodeClient({\r\n            client_id:\r\n              \"58730156701-d27fqgjbhmuqt974hav87of8hofgi6i0.apps.googleusercontent.com\",\r\n            scope: \"email profile openid\",\r\n            redirect_uri: \"https://restaurant-n54j.onrender.com/auth/callback\",\r\n            callback: response => {\r\n              if (response.code) {\r\n                this.sendCodeToBackend(response.code);\r\n              }\r\n            }\r\n          })\r\n          .requestCode();\r\n      });\r\n    },\r\n    loginUser() {\r\n      const payload = {\r\n        email: this.email,\r\n        password: this.password\r\n      };\r\n\r\n      this.LOGIN_USER(payload)\r\n        .then(response => {\r\n          const decodedToken = jwt_decode(response.token);\r\n         // console.log(decodedToken);\r\n          // Access the decoded token properties\r\n          const isAdmin = decodedToken.isAdmin;\r\n\r\n          Swal.fire(\"login successful\");\r\n\r\n          // Redirect based on user role\r\n          //console.log(\"isAdmin:\", isAdmin);\r\n          this.$router.push('/')\r\n\r\n\r\n        })\r\n        .catch(err => {\r\n          const message = err.message;\r\n\r\n          Swal.fire(\"Oh oo!\", `${message}`, \"error\");\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n</style>\r\n"],"mappings":";AAaA,SAASA,UAAS,QAAS,MAAM;AACjC,SAASC,eAAc,QAAS,mBAAmB;AACnD,OAAOC,IAAG,MAAO,aAAa;AAC9B,OAAOC,UAAS,MAAO,YAAY;AAEnC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGR,UAAU,CAAC,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAAC;IAClDS,KAAKA,CAAA,EAAG;MACNR,eAAe,CAACS,MAAK,IAAK;QACxBA,MAAM,CAACC,QAAQ,CAACC,MAAK,CAClBC,cAAc,CAAC;UACdC,SAAS,EACP,yEAAyE;UAC3EC,KAAK,EAAE,sBAAsB;UAC7BC,YAAY,EAAE,oDAAoD;UAClEC,QAAQ,EAAEC,QAAO,IAAK;YACpB,IAAIA,QAAQ,CAACC,IAAI,EAAE;cACjB,IAAI,CAACC,iBAAiB,CAACF,QAAQ,CAACC,IAAI,CAAC;YACvC;UACF;QACF,CAAC,EACAE,WAAW,CAAC,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,MAAMC,OAAM,GAAI;QACdjB,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MAED,IAAI,CAACiB,UAAU,CAACD,OAAO,EACpBE,IAAI,CAACP,QAAO,IAAK;QAChB,MAAMQ,YAAW,GAAIvB,UAAU,CAACe,QAAQ,CAACS,KAAK,CAAC;QAChD;QACC;QACA,MAAMC,OAAM,GAAIF,YAAY,CAACE,OAAO;QAEpC1B,IAAI,CAAC2B,IAAI,CAAC,kBAAkB,CAAC;;QAE7B;QACA;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG;MAGvB,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;QACZ,MAAMC,OAAM,GAAID,GAAG,CAACC,OAAO;QAE3BhC,IAAI,CAAC2B,IAAI,CAAC,QAAQ,EAAG,GAAEK,OAAQ,EAAC,EAAE,OAAO,CAAC;MAC5C,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}