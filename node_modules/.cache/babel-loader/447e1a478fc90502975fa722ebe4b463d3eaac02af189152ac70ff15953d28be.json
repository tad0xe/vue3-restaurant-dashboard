{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"map\",\n  style: {\n    \"height\": \"500px\",\n    \"width\": \"100%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */), _createElementVNode(\"p\", null, \"Latitude: \" + _toDisplayString($setup.lat), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Longitude: \" + _toDisplayString($setup.lng), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["ref","style","_createElementBlock","_createElementVNode","_hoisted_1","_toDisplayString","$setup","lat","lng"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\rex.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div ref=\"map\" style=\"height: 500px; width: 100%\"></div>\r\n    <p>Latitude: {{ lat }}</p>\r\n    <p>Longitude: {{ lng }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\nconst lat = ref(null)\r\nconst lng = ref(null)\r\nconst map = ref(null)\r\n\r\nconst loadGoogleMaps = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // Check if Google Maps is already loaded\r\n    if (window.google && window.google.maps) {\r\n      return resolve(window.google.maps)\r\n    }\r\n\r\n    // Avoid loading script multiple times\r\n    if (document.getElementById('google-maps-script')) {\r\n      return reject(new Error('Google Maps script is already loading or failed'))\r\n    }\r\n\r\n    // Load the Google Maps script\r\n    const script = document.createElement('script')\r\n    script.id = 'google-maps-script'\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCkbHZXmqyIxjFpN8bMvDeURTmlpEhDHv4`\r\n    script.async = true\r\n    script.defer = true\r\n\r\n    script.onload = () => {\r\n      if (window.google && window.google.maps) {\r\n        resolve(window.google.maps)\r\n      } else {\r\n        reject(new Error('Google Maps failed to load'))\r\n      }\r\n    }\r\n\r\n    script.onerror = () => reject(new Error('Failed to load Google Maps'))\r\n\r\n    document.head.appendChild(script)\r\n  })\r\n}\r\n\r\nonMounted(async () => {\r\n  try {\r\n    const maps = await loadGoogleMaps()\r\n\r\n    const googleMap = new maps.Map(map.value, {\r\n      center: { lat: 0, lng: 0 },\r\n      zoom: 2,\r\n    })\r\n\r\n    googleMap.addListener('click', (e) => {\r\n      lat.value = e.latLng.lat()\r\n      lng.value = e.latLng.lng()\r\n    })\r\n  } catch (err) {\r\n    console.error('Google Maps failed to load:', err.message)\r\n  }\r\n})\r\n</script>\r\n"],"mappings":";;EAESA,GAAG,EAAC,KAAK;EAACC,KAAkC,EAAlC;IAAA;IAAA;EAAA;;;uBADjBC,mBAAA,CAIM,cAHJC,mBAAA,CAAwD,OAAxDC,UAAwD,+BACxDD,mBAAA,CAA0B,WAAvB,YAAU,GAAAE,gBAAA,CAAGC,MAAA,CAAAC,GAAG,kBACnBJ,mBAAA,CAA2B,WAAxB,aAAW,GAAAE,gBAAA,CAAGC,MAAA,CAAAE,GAAG,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}