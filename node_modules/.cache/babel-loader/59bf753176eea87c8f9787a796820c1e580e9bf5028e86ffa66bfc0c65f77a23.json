{"ast":null,"code":"import { QrcodeStream } from \"vue-qrcode-reader\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    QrcodeStream\n  },\n  data() {\n    return {\n      order: null,\n      loading: false,\n      error: null\n    };\n  },\n  methods: {\n    onInit(promise) {\n      promise.catch(error => {\n        console.error(\"Camera initialization failed:\", error);\n        this.error = \"Failed to access camera.\";\n      });\n    },\n    async onDecode(reference) {\n      this.loading = true;\n      this.error = null;\n      this.order = null;\n      try {\n        const res = await axios.get(`http://localhost:4000/api/order/${reference}`);\n        this.order = res.data.order;\n      } catch (err) {\n        this.error = \"Order not found or invalid reference.\";\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["QrcodeStream","axios","components","data","order","loading","error","methods","onInit","promise","catch","console","onDecode","reference","res","get","err"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\app\\admin\\scanner.vue"],"sourcesContent":["<template>\r\n  <div class=\"scanner-container\">\r\n    <h2>üéØ Scan Ticket QR Code</h2>\r\n\r\n    <qrcode-stream @decode=\"onDecode\" @init=\"onInit\" />\r\n\r\n    <div v-if=\"loading\">üîç Verifying reference...</div>\r\n    <div v-if=\"order\">\r\n      <h3>‚úÖ Order Found</h3>\r\n      <p><strong>Reference:</strong> {{ order.reference }}</p>\r\n      <p><strong>Title:</strong> {{ order.title }}</p>\r\n      <p><strong>Email:</strong> {{ order.contact.email }}</p>\r\n      <p><strong>Phone:</strong> {{ order.contact.phone }}</p>\r\n      <p><strong>Price:</strong> ${{ order.price }}</p>\r\n    </div>\r\n    <div v-if=\"error\" class=\"text-danger\">‚ùå {{ error }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { QrcodeStream } from \"vue-qrcode-reader\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  components: { QrcodeStream },\r\n  data() {\r\n    return {\r\n      order: null,\r\n      loading: false,\r\n      error: null,\r\n    };\r\n  },\r\n  methods: {\r\n    onInit(promise) {\r\n      promise.catch(error => {\r\n        console.error(\"Camera initialization failed:\", error);\r\n        this.error = \"Failed to access camera.\";\r\n      });\r\n    },\r\n    async onDecode(reference) {\r\n      this.loading = true;\r\n      this.error = null;\r\n      this.order = null;\r\n\r\n      try {\r\n        const res = await axios.get(`http://localhost:4000/api/order/${reference}`);\r\n        this.order = res.data.order;\r\n      } catch (err) {\r\n        this.error = \"Order not found or invalid reference.\";\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.scanner-container {\r\n  max-width: 500px;\r\n  margin: auto;\r\n  text-align: center;\r\n}\r\n\r\n.text-danger {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":"AAoBA,SAASA,YAAW,QAAS,mBAAmB;AAChD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IAAEF;EAAa,CAAC;EAC5BG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAACC,OAAO,EAAE;MACdA,OAAO,CAACC,KAAK,CAACJ,KAAI,IAAK;QACrBK,OAAO,CAACL,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAACA,KAAI,GAAI,0BAA0B;MACzC,CAAC,CAAC;IACJ,CAAC;IACD,MAAMM,QAAQA,CAACC,SAAS,EAAE;MACxB,IAAI,CAACR,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,IAAI;MACjB,IAAI,CAACF,KAAI,GAAI,IAAI;MAEjB,IAAI;QACF,MAAMU,GAAE,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAE,mCAAkCF,SAAU,EAAC,CAAC;QAC3E,IAAI,CAACT,KAAI,GAAIU,GAAG,CAACX,IAAI,CAACC,KAAK;MAC7B,EAAE,OAAOY,GAAG,EAAE;QACZ,IAAI,CAACV,KAAI,GAAI,uCAAuC;MACtD,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}