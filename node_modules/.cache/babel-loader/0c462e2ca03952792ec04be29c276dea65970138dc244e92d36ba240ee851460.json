{"ast":null,"code":"import axiosInstance from \"../../helpers/axiosInstance\";\nconst state = {\n  revenues: [],\n  totalIncome: 0,\n  totalExpenses: 0\n};\nconst mutations = {\n  SET_REVENUES(state, revenues) {\n    state.revenues = revenues;\n  },\n  SET_TOTAL_INCOME(state, totalIncome) {\n    state.totalIncome = totalIncome;\n  },\n  SET_TOTAL_EXPENSES(state, totalExpenses) {\n    state.totalExpenses = totalExpenses;\n  }\n};\nconst actions = {\n  fetchRevenues({\n    commit\n  }) {\n    return axiosInstance.get('/revenue').then(response => {\n      commit('SET_REVENUES', response.data.revenues);\n      commit('SET_TOTAL_INCOME', calculateTotalIncome(response.data.revenues));\n      commit('SET_TOTAL_EXPENSES', calculateTotalExpenses(response.data.revenues));\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n};\nconst getters = {\n  getRevenues(state) {\n    return state.revenues;\n  },\n  getTotalIncome(state) {\n    return state.totalIncome;\n  },\n  getTotalExpenses(state) {\n    return state.totalExpenses;\n  }\n};\n\n// Helper function to calculate the total income\nfunction calculateTotalIncome(revenues) {\n  let totalIncome = 0;\n  revenues.forEach(revenue => {\n    totalIncome += revenue.income;\n  });\n  return totalIncome;\n}\n\n// Helper function to calculate the total expenses\nfunction calculateTotalExpenses(revenues) {\n  let totalExpenses = 0;\n  revenues.forEach(revenue => {\n    totalExpenses += revenue.expenses;\n  });\n  return totalExpenses;\n}\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axiosInstance","state","revenues","totalIncome","totalExpenses","mutations","SET_REVENUES","SET_TOTAL_INCOME","SET_TOTAL_EXPENSES","actions","fetchRevenues","commit","get","then","response","data","calculateTotalIncome","calculateTotalExpenses","catch","error","console","getters","getRevenues","getTotalIncome","getTotalExpenses","forEach","revenue","income","expenses"],"sources":["C:/Users/ajib/OneDrive/Desktop/event-ticket/event-ticket-frontend/src/store/modules/revenue.js"],"sourcesContent":["import axiosInstance from \"../../helpers/axiosInstance\";\r\n\r\nconst state = {\r\n  revenues: [],\r\n  totalIncome: 0,\r\n  totalExpenses: 0,\r\n};\r\n\r\nconst mutations = {\r\n  SET_REVENUES(state, revenues) {\r\n    state.revenues = revenues;\r\n  },\r\n  SET_TOTAL_INCOME(state, totalIncome) {\r\n    state.totalIncome = totalIncome;\r\n  },\r\n  SET_TOTAL_EXPENSES(state, totalExpenses) {\r\n    state.totalExpenses = totalExpenses;\r\n  },\r\n};\r\n\r\nconst actions = {\r\n  fetchRevenues({ commit }) {\r\n    return axiosInstance\r\n      .get('/revenue')\r\n      .then((response) => {\r\n        commit('SET_REVENUES', response.data.revenues);\r\n        commit('SET_TOTAL_INCOME', calculateTotalIncome(response.data.revenues));\r\n        commit('SET_TOTAL_EXPENSES', calculateTotalExpenses(response.data.revenues));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  },\r\n};\r\n\r\nconst getters = {\r\n  getRevenues(state) {\r\n    return state.revenues;\r\n  },\r\n  getTotalIncome(state) {\r\n    return state.totalIncome;\r\n  },\r\n  getTotalExpenses(state) {\r\n    return state.totalExpenses;\r\n  },\r\n};\r\n\r\n// Helper function to calculate the total income\r\nfunction calculateTotalIncome(revenues) {\r\n  let totalIncome = 0;\r\n  revenues.forEach(revenue => {\r\n    totalIncome += revenue.income;\r\n  });\r\n  return totalIncome;\r\n}\r\n\r\n// Helper function to calculate the total expenses\r\nfunction calculateTotalExpenses(revenues) {\r\n  let totalExpenses = 0;\r\n  revenues.forEach(revenue => {\r\n    totalExpenses += revenue.expenses;\r\n  });\r\n  return totalExpenses;\r\n}\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n};\r\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,6BAA6B;AAEvD,MAAMC,KAAK,GAAG;EACZC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE,CAAC;EACdC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,YAAYA,CAACL,KAAK,EAAEC,QAAQ,EAAE;IAC5BD,KAAK,CAACC,QAAQ,GAAGA,QAAQ;EAC3B,CAAC;EACDK,gBAAgBA,CAACN,KAAK,EAAEE,WAAW,EAAE;IACnCF,KAAK,CAACE,WAAW,GAAGA,WAAW;EACjC,CAAC;EACDK,kBAAkBA,CAACP,KAAK,EAAEG,aAAa,EAAE;IACvCH,KAAK,CAACG,aAAa,GAAGA,aAAa;EACrC;AACF,CAAC;AAED,MAAMK,OAAO,GAAG;EACdC,aAAaA,CAAC;IAAEC;EAAO,CAAC,EAAE;IACxB,OAAOX,aAAa,CACjBY,GAAG,CAAC,UAAU,CAAC,CACfC,IAAI,CAAEC,QAAQ,IAAK;MAClBH,MAAM,CAAC,cAAc,EAAEG,QAAQ,CAACC,IAAI,CAACb,QAAQ,CAAC;MAC9CS,MAAM,CAAC,kBAAkB,EAAEK,oBAAoB,CAACF,QAAQ,CAACC,IAAI,CAACb,QAAQ,CAAC,CAAC;MACxES,MAAM,CAAC,oBAAoB,EAAEM,sBAAsB,CAACH,QAAQ,CAACC,IAAI,CAACb,QAAQ,CAAC,CAAC;IAC9E,CAAC,CAAC,CACDgB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN;AACF,CAAC;AAED,MAAME,OAAO,GAAG;EACdC,WAAWA,CAACrB,KAAK,EAAE;IACjB,OAAOA,KAAK,CAACC,QAAQ;EACvB,CAAC;EACDqB,cAAcA,CAACtB,KAAK,EAAE;IACpB,OAAOA,KAAK,CAACE,WAAW;EAC1B,CAAC;EACDqB,gBAAgBA,CAACvB,KAAK,EAAE;IACtB,OAAOA,KAAK,CAACG,aAAa;EAC5B;AACF,CAAC;;AAED;AACA,SAASY,oBAAoBA,CAACd,QAAQ,EAAE;EACtC,IAAIC,WAAW,GAAG,CAAC;EACnBD,QAAQ,CAACuB,OAAO,CAACC,OAAO,IAAI;IAC1BvB,WAAW,IAAIuB,OAAO,CAACC,MAAM;EAC/B,CAAC,CAAC;EACF,OAAOxB,WAAW;AACpB;;AAEA;AACA,SAASc,sBAAsBA,CAACf,QAAQ,EAAE;EACxC,IAAIE,aAAa,GAAG,CAAC;EACrBF,QAAQ,CAACuB,OAAO,CAACC,OAAO,IAAI;IAC1BtB,aAAa,IAAIsB,OAAO,CAACE,QAAQ;EACnC,CAAC,CAAC;EACF,OAAOxB,aAAa;AACtB;AAEA,eAAe;EACbH,KAAK;EACLI,SAAS;EACTI,OAAO;EACPY;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}