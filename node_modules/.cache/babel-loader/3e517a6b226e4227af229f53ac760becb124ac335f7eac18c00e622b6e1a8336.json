{"ast":null,"code":"import { googleSdkLoaded } from \"vue3-google-login\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      userDetails: null\n    };\n  },\n  name: \"YourComponent\",\n  methods: {\n    login() {\n      googleSdkLoaded(google => {\n        google.accounts.oauth2.initCodeClient({\n          client_id: \"586701-d2i0.apps.googleusercontent.com\",\n          scope: \"email profile openid\",\n          redirect_uri: \"http://localhost:4000/auth/callback\",\n          callback: response => {\n            if (response.code) {\n              this.sendCodeToBackend(response.code);\n            }\n          }\n        }).requestCode();\n      });\n    },\n    async sendCodeToBackend(code) {\n      try {\n        const response = await axios.post(\"https://oauth2.googleapis.com/token\", {\n          code,\n          client_id: \"17380556257-79ooh960gmg8t95l65itsu8m57evhb3n.apps.googleusercontent.com\",\n          client_secret: \"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\",\n          redirect_uri: \"postmessage\",\n          grant_type: \"authorization_code\"\n        });\n        const accessToken = response.data.access_token;\n        console.log(accessToken);\n\n        // Fetch user details using the access token\n        const userResponse = await axios.get(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        if (userResponse && userResponse.data) {\n          // Set the userDetails data property to the userResponse object\n          this.userDetails = userResponse.data;\n        } else {\n          // Handle the case where userResponse or userResponse.data is undefined\n          console.error(\"Failed to fetch user details.\");\n        }\n      } catch (error) {\n        console.error(\"Token exchange failed:\", error.response.data);\n      }\n    }\n  }\n};","map":{"version":3,"names":["googleSdkLoaded","axios","data","userDetails","name","methods","login","google","accounts","oauth2","initCodeClient","client_id","scope","redirect_uri","callback","response","code","sendCodeToBackend","requestCode","post","client_secret","grant_type","accessToken","access_token","console","log","userResponse","get","headers","Authorization","error"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\rex.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button @click=\"login\">Login Using Google</button>\r\n <div v-if=\"userDetails\">\r\n      <h2>User Details</h2>\r\n      <p>Name: {{ userDetails.name }}</p>\r\n      <p>Email: {{ userDetails.email }}</p>\r\n      <p>Profile Picture: <img\r\n          :src=\"userDetails.picture\"\r\n          alt=\"Profile Picture\"\r\n        ></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { googleSdkLoaded } from \"vue3-google-login\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n data() {\r\n    return {\r\n      userDetails: null\r\n    };\r\n  },\r\n  name: \"YourComponent\",\r\n  methods: {\r\n    login() {\r\n      googleSdkLoaded(google => {\r\n        google.accounts.oauth2\r\n          .initCodeClient({\r\n            client_id:\r\n              \"586701-d2i0.apps.googleusercontent.com\",\r\n            scope: \"email profile openid\",\r\n            redirect_uri: \"http://localhost:4000/auth/callback\",\r\n            callback: response => {\r\n              if (response.code) {\r\n                this.sendCodeToBackend(response.code);\r\n              }\r\n            }\r\n          })\r\n          .requestCode();\r\n      });\r\n    },\r\n    async sendCodeToBackend(code) {\r\n      try {\r\n        const response = await axios.post(\r\n          \"https://oauth2.googleapis.com/token\",\r\n          {\r\n            code,\r\n            client_id:\r\n              \"17380556257-79ooh960gmg8t95l65itsu8m57evhb3n.apps.googleusercontent.com\",\r\n            client_secret: \"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\",\r\n            redirect_uri: \"postmessage\",\r\n            grant_type: \"authorization_code\"\r\n          }\r\n        );\r\n\r\n        const accessToken = response.data.access_token;\r\n        console.log(accessToken);\r\n\r\n        // Fetch user details using the access token\r\n        const userResponse = await axios.get(\r\n          \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`\r\n            }\r\n          }\r\n        );\r\n\r\n        if (userResponse && userResponse.data) {\r\n          // Set the userDetails data property to the userResponse object\r\n          this.userDetails = userResponse.data;\r\n        } else {\r\n          // Handle the case where userResponse or userResponse.data is undefined\r\n          console.error(\"Failed to fetch user details.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Token exchange failed:\", error.response.data);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"AAgBA,SAASA,eAAc,QAAS,mBAAmB;AACnD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACdC,IAAIA,CAAA,EAAG;IACJ,OAAO;MACLC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,IAAI,EAAE,eAAe;EACrBC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACNN,eAAe,CAACO,MAAK,IAAK;QACxBA,MAAM,CAACC,QAAQ,CAACC,MAAK,CAClBC,cAAc,CAAC;UACdC,SAAS,EACP,wCAAwC;UAC1CC,KAAK,EAAE,sBAAsB;UAC7BC,YAAY,EAAE,qCAAqC;UACnDC,QAAQ,EAAEC,QAAO,IAAK;YACpB,IAAIA,QAAQ,CAACC,IAAI,EAAE;cACjB,IAAI,CAACC,iBAAiB,CAACF,QAAQ,CAACC,IAAI,CAAC;YACvC;UACF;QACF,CAAC,EACAE,WAAW,CAAC,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC;IACD,MAAMD,iBAAiBA,CAACD,IAAI,EAAE;MAC5B,IAAI;QACF,MAAMD,QAAO,GAAI,MAAMd,KAAK,CAACkB,IAAI,CAC/B,qCAAqC,EACrC;UACEH,IAAI;UACJL,SAAS,EACP,yEAAyE;UAC3ES,aAAa,EAAE,qCAAqC;UACpDP,YAAY,EAAE,aAAa;UAC3BQ,UAAU,EAAE;QACd,CACF,CAAC;QAED,MAAMC,WAAU,GAAIP,QAAQ,CAACb,IAAI,CAACqB,YAAY;QAC9CC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;;QAExB;QACA,MAAMI,YAAW,GAAI,MAAMzB,KAAK,CAAC0B,GAAG,CAClC,+CAA+C,EAC/C;UACEC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASP,WAAY;UACvC;QACF,CACF,CAAC;QAED,IAAII,YAAW,IAAKA,YAAY,CAACxB,IAAI,EAAE;UACrC;UACA,IAAI,CAACC,WAAU,GAAIuB,YAAY,CAACxB,IAAI;QACtC,OAAO;UACL;UACAsB,OAAO,CAACM,KAAK,CAAC,+BAA+B,CAAC;QAChD;MACF,EAAE,OAAOA,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACf,QAAQ,CAACb,IAAI,CAAC;MAC9D;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}