{"ast":null,"code":"import { QuillEditor } from \"@vueup/vue-quill\";\nimport \"@vueup/vue-quill/dist/vue-quill.snow.css\";\nimport { mapActions } from \"vuex\";\nimport Swal from \"sweetalert2\";\nexport default {\n  components: {\n    QuillEditor\n  },\n  data() {\n    return {\n      steps: [\"Details\", \"Time/Location\", \"Pricing\", \"Location\"],\n      currentStep: 0,\n      // Form fields\n      title: \"\",\n      price: null,\n      description: \"\",\n      location: \"\",\n      isVirtual: false,\n      eventType: \"single\",\n      // or 'recurring'\n      timezone: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      startTime: \"12:00\",\n      endTime: \"12:00\",\n      startAmPm: \"AM\",\n      endAmPm: \"AM\",\n      eventFrequency: \"Every day\"\n    };\n  },\n  methods: {\n    ...mapActions([\"createProduct\"]),\n    nextStep() {\n      if (this.currentStep < this.steps.length - 1) this.currentStep++;\n    },\n    prevStep() {\n      if (this.currentStep > 0) this.currentStep--;\n    },\n    mounted() {\n      const handleImageUpload = event => {\n        const file = event.target.files[0];\n        if (file) {\n          // preview logic or form update here\n          console.log(file.name);\n        }\n      };\n      // Initialize any required data or plugins here\n    },\n\n    async handleSubmit() {\n      const fileInput = this.$refs.fileInput;\n      const formData = new FormData();\n      formData.append(\"title\", this.title);\n      formData.append(\"description\", this.description);\n      formData.append(\"price\", this.price);\n      formData.append(\"location\", this.location);\n      formData.append(\"isVirtual\", this.isVirtual);\n      for (let i = 0; i < fileInput.files.length; i++) {\n        formData.append(\"photos\", fileInput.files[i]);\n      }\n      try {\n        await this.createProduct(formData);\n        Swal.fire(\"Success\", \"Product created!\", \"success\");\n      } catch (error) {\n        console.error(\"Product creation failed:\", error);\n        Swal.fire(\"Error\", \"Failed to create product\", \"error\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["QuillEditor","mapActions","Swal","components","data","steps","currentStep","title","price","description","location","isVirtual","eventType","timezone","startDate","endDate","startTime","endTime","startAmPm","endAmPm","eventFrequency","methods","nextStep","length","prevStep","mounted","handleImageUpload","event","file","target","files","console","log","name","handleSubmit","fileInput","$refs","formData","FormData","append","i","createProduct","fire","error"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\vue3-restaurant-dashboard\\src\\components\\rex.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <!-- Stepper -->\r\n    <div class=\"stepper\">\r\n      <div\r\n        v-for=\"(step, index) in steps\"\r\n        :key=\"index\"\r\n        class=\"step\"\r\n        :class=\"{\r\n          active: currentStep === index,\r\n          completed: index < currentStep,\r\n        }\"\r\n      >\r\n        <div class=\"circle\">\r\n          <span v-if=\"index < currentStep\">âœ”</span>\r\n          <span v-else>{{ index + 1 }}</span>\r\n        </div>\r\n        <div class=\"label\">{{ step }}</div>\r\n      </div>\r\n      <div class=\"progress-line\">\r\n        <div\r\n          class=\"progress-fill\"\r\n          :style=\"{ width: (currentStep / (steps.length - 1)) * 100 + '%' }\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Form -->\r\n    <div class=\"container-fluid d-flex justify-content-center\">\r\n      <form @submit.prevent=\"handleSubmit\" class=\"w-75 shadow p-4\">\r\n        <!-- STEP 1: Basic Info -->\r\n        <div v-if=\"currentStep === 0\">\r\n          <div class=\"row\">\r\n            <div class=\"mb-3 col-md-6\">\r\n              <label for=\"title\" class=\"form-label\"\r\n                >What is your event name:</label\r\n              >\r\n              <input\r\n                v-model=\"title\"\r\n                type=\"text\"\r\n                id=\"title\"\r\n                class=\"form-control\"\r\n              />\r\n            </div>\r\n            <div class=\"mb-3 col-md-6\">\r\n              <label for=\"price\" class=\"form-label\">Price:</label>\r\n              <input\r\n                v-model=\"price\"\r\n                type=\"number\"\r\n                id=\"price\"\r\n                class=\"form-control\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">What's your event about:</label>\r\n            <QuillEditor\r\n              v-model=\"description\"\r\n              theme=\"snow\"\r\n              style=\"height: 300px\"\r\n            />\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Photos:</label>\r\n            <input ref=\"fileInput\" type=\"file\" multiple class=\"form-control\" />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- STEP 2: Description -->\r\n        <div v-if=\"currentStep === 1\">\r\n          <div class=\"container mt-4 text-start\">\r\n            <h4><strong>When is your event?</strong></h4>\r\n            <p class=\"text-muted\">Select all the dates of your event</p>\r\n\r\n            <!-- Toggle Buttons -->\r\n            <div class=\"btn-group mb-3\" role=\"group\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn\"\r\n                :class=\"\r\n                  eventType === 'single'\r\n                    ? 'btn-outline-danger active'\r\n                    : 'btn-outline-secondary'\r\n                \"\r\n                @click=\"eventType = 'single'\"\r\n              >\r\n                Single Event\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn\"\r\n                :class=\"\r\n                  eventType === 'recurring'\r\n                    ? 'btn-outline-danger active'\r\n                    : 'btn-outline-secondary'\r\n                \"\r\n                @click=\"eventType = 'recurring'\"\r\n              >\r\n                Recurring Event\r\n              </button>\r\n            </div>\r\n\r\n            <!-- Time Zone -->\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">* Select time zone</label>\r\n              <select class=\"form-select\" v-model=\"timezone\">\r\n                <option value=\"\">Select Time Zone</option>\r\n                <option value=\"UTC+01:00\">\r\n                  (UTC+01:00) West Central Africa\r\n                </option>\r\n                <option value=\"UTC+00:00\">(UTC+00:00) GMT</option>\r\n                <option value=\"UTC-05:00\">\r\n                  (UTC-05:00) Eastern Time (US & Canada)\r\n                </option>\r\n                <!-- Add more as needed -->\r\n              </select>\r\n            </div>\r\n\r\n            <!-- Start/End Date and Time -->\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label class=\"form-label\">* Start date</label>\r\n                <input type=\"date\" class=\"form-control\" v-model=\"startDate\" />\r\n              </div>\r\n              <div class=\"col-md-6 mb-3\" v-if=\"eventType === 'single'\">\r\n                <label class=\"form-label\">* End date</label>\r\n                <input type=\"date\" class=\"form-control\" v-model=\"endDate\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-4 mb-3\">\r\n                <label class=\"form-label\">Start time</label>\r\n                <div class=\"d-flex gap-2\">\r\n                  <input type=\"time\" class=\"form-control\" v-model=\"startTime\" />\r\n                  <select class=\"form-select\" v-model=\"startAmPm\">\r\n                    <option>AM</option>\r\n                    <option>PM</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 mb-3\">\r\n                <label class=\"form-label\">End time</label>\r\n                <div class=\"d-flex gap-2\">\r\n                  <input type=\"time\" class=\"form-control\" v-model=\"endTime\" />\r\n                  <select class=\"form-select\" v-model=\"endAmPm\">\r\n                    <option>AM</option>\r\n                    <option>PM</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Recurring Options -->\r\n              <div class=\"col-md-4 mb-3\" v-if=\"eventType === 'recurring'\">\r\n                <label class=\"form-label\">* Event frequency</label>\r\n                <select class=\"form-select\" v-model=\"eventFrequency\">\r\n                  <option>Every day</option>\r\n                  <option>Weekdays</option>\r\n                  <option>Weekends</option>\r\n                  <option>Every week</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- STEP 3: Media Upload -->\r\n        <div v-if=\"currentStep === 2\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Photos:</label>\r\n            <input ref=\"fileInput\" type=\"file\" multiple class=\"form-control\" />\r\n          </div>\r\n          <div class=\"container py-5 text-start\">\r\n            <div class=\"row\">\r\n              <!-- Left Column: Event Image -->\r\n              <div class=\"col-md-6\">\r\n                <h5><strong>Event Image</strong></h5>\r\n                <p class=\"text-muted\">Upload a JPEG or PNG file</p>\r\n\r\n                <div\r\n                  class=\"alert alert-light border text-muted py-2 small d-flex align-items-start\"\r\n                >\r\n                  <i class=\"bi bi-info-circle-fill me-2 text-danger\"></i>\r\n                  Images with a 1:1 ratio (a square) work best on all event\r\n                  themes\r\n                </div>\r\n\r\n                <label\r\n                  for=\"imageUpload\"\r\n                  class=\"border rounded bg-light d-flex flex-column justify-content-center align-items-center text-center py-5 mb-2\"\r\n                  style=\"cursor: pointer\"\r\n                >\r\n                  <i class=\"bi bi-image fs-1 mb-2\"></i>\r\n                  <span>\r\n                    Drag an image here or\r\n                    <span class=\"text-danger fw-bold\">click to upload</span>\r\n                  </span>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"imageUpload\"\r\n                    class=\"d-none\"\r\n                    @change=\"handleImageUpload\"\r\n                  />\r\n                </label>\r\n\r\n                <p class=\"text-muted small\">\r\n                  Upload an image with a size less than 2mb\r\n                </p>\r\n              </div>\r\n\r\n              <!-- Right Column: Event Theme -->\r\n              <div class=\"col-md-6\">\r\n                <div class=\"d-flex justify-content-between align-items-center\">\r\n                  <div>\r\n                    <h5><strong>Event Page Theme</strong></h5>\r\n                    <p class=\"text-muted small mb-2\">\r\n                      Select the layout for your event page - it will only take\r\n                      2 minutes\r\n                    </p>\r\n                  </div>\r\n                  <a href=\"#\" class=\"text-decoration-none text-muted small\">\r\n                    <i class=\"bi bi-play-circle\"></i> Preview theme\r\n                  </a>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"border rounded bg-light p-3 d-flex align-items-center\"\r\n                  style=\"cursor: pointer\"\r\n                >\r\n                  <i\r\n                    class=\"bi bi-layout-text-window-reverse fs-3 text-secondary me-3\"\r\n                  ></i>\r\n                  <div>\r\n                    <div class=\"small text-muted\">Theme</div>\r\n                    <div class=\"fw-bold\">Choose theme</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Bottom Buttons -->\r\n            <div class=\"d-flex justify-content-center gap-3 mt-5\">\r\n              <button class=\"btn btn-outline-danger px-4\">\r\n                Skip and do later\r\n              </button>\r\n              <button class=\"btn btn-danger px-4\">Continue</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- STEP 4: Location -->\r\n        <div v-if=\"currentStep === 3\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Time and Location of event:</label>\r\n            <input v-model=\"location\" type=\"text\" class=\"form-control\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"custom-control custom-checkbox ml-1\">\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"custom-control-input\"\r\n                id=\"basic_checkbox_1\"\r\n                v-model=\"isVirtual\"\r\n              />\r\n              <label class=\"custom-control-label\" for=\"basic_checkbox_1\"\r\n                >This is a virtual event</label\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Buttons -->\r\n        <div class=\"text-center mt-4 d-flex justify-content-between\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-secondary\"\r\n            @click=\"prevStep\"\r\n            :disabled=\"currentStep === 0\"\r\n          >\r\n            Back\r\n          </button>\r\n          <button\r\n            v-if=\"currentStep < steps.length - 1\"\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            @click=\"nextStep\"\r\n          >\r\n            Next\r\n          </button>\r\n          <button v-else type=\"submit\" class=\"btn btn-success\">\r\n            Create Event\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { QuillEditor } from \"@vueup/vue-quill\";\r\nimport \"@vueup/vue-quill/dist/vue-quill.snow.css\";\r\nimport { mapActions } from \"vuex\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n  components: {\r\n    QuillEditor,\r\n  },\r\n  data() {\r\n    return {\r\n      steps: [\"Details\", \"Time/Location\", \"Pricing\", \"Location\"],\r\n      currentStep: 0,\r\n\r\n      // Form fields\r\n      title: \"\",\r\n      price: null,\r\n      description: \"\",\r\n      location: \"\",\r\n      isVirtual: false,\r\n      eventType: \"single\", // or 'recurring'\r\n      timezone: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      startTime: \"12:00\",\r\n      endTime: \"12:00\",\r\n      startAmPm: \"AM\",\r\n      endAmPm: \"AM\",\r\n      eventFrequency: \"Every day\",\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\"createProduct\"]),\r\n\r\n    nextStep() {\r\n      if (this.currentStep < this.steps.length - 1) this.currentStep++;\r\n    },\r\n    prevStep() {\r\n      if (this.currentStep > 0) this.currentStep--;\r\n    },\r\n    mounted() {\r\n      const handleImageUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n          // preview logic or form update here\r\n          console.log(file.name);\r\n        }\r\n      };\r\n      // Initialize any required data or plugins here\r\n    },\r\n    async handleSubmit() {\r\n      const fileInput = this.$refs.fileInput;\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"title\", this.title);\r\n      formData.append(\"description\", this.description);\r\n      formData.append(\"price\", this.price);\r\n      formData.append(\"location\", this.location);\r\n      formData.append(\"isVirtual\", this.isVirtual);\r\n\r\n      for (let i = 0; i < fileInput.files.length; i++) {\r\n        formData.append(\"photos\", fileInput.files[i]);\r\n      }\r\n\r\n      try {\r\n        await this.createProduct(formData);\r\n        Swal.fire(\"Success\", \"Product created!\", \"success\");\r\n      } catch (error) {\r\n        console.error(\"Product creation failed:\", error);\r\n        Swal.fire(\"Error\", \"Failed to create product\", \"error\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-container {\r\n  width: 95%;\r\n  margin: auto;\r\n  margin-top: 30px;\r\n}\r\n\r\n.stepper {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-bottom: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.step {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  flex: 1;\r\n  z-index: 1;\r\n  color: #999;\r\n}\r\n\r\n.step .circle {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background: #ccc;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.step.active .circle {\r\n  background: black;\r\n}\r\n\r\n.step.completed .circle {\r\n  background: #00bfa5;\r\n}\r\n\r\n.step.active {\r\n  color: black;\r\n}\r\n\r\n.step.completed {\r\n  color: #00bfa5;\r\n}\r\n\r\n.label {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n.progress-line {\r\n  position: absolute;\r\n  bottom: 14px;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4px;\r\n  background: #e0e0e0;\r\n  z-index: 0;\r\n}\r\n\r\n.progress-fill {\r\n  height: 4px;\r\n  background: #00bfa5;\r\n  transition: width 0.3s ease-in-out;\r\n  width: 0%;\r\n}\r\n</style>\r\n"],"mappings":"AA4SA,SAASA,WAAU,QAAS,kBAAkB;AAC9C,OAAO,0CAA0C;AACjD,SAASC,UAAS,QAAS,MAAM;AACjC,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE,UAAU,CAAC;MAC1DC,WAAW,EAAE,CAAC;MAEd;MACAC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,IAAI;MACXC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,QAAQ;MAAE;MACrBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,OAAO;MAClBC,OAAO,EAAE,OAAO;MAChBC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE,IAAI;MACbC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGpB,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC;IAEhCqB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAChB,WAAU,GAAI,IAAI,CAACD,KAAK,CAACkB,MAAK,GAAI,CAAC,EAAE,IAAI,CAACjB,WAAW,EAAE;IAClE,CAAC;IACDkB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAClB,WAAU,GAAI,CAAC,EAAE,IAAI,CAACA,WAAW,EAAE;IAC9C,CAAC;IACDmB,OAAOA,CAAA,EAAG;MACR,MAAMC,iBAAgB,GAAKC,KAAK,IAAK;QACnC,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;QAClC,IAAIF,IAAI,EAAE;UACR;UACAG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACK,IAAI,CAAC;QACxB;MACF,CAAC;MACD;IACF,CAAC;;IACD,MAAMC,YAAYA,CAAA,EAAG;MACnB,MAAMC,SAAQ,GAAI,IAAI,CAACC,KAAK,CAACD,SAAS;MACtC,MAAME,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAE/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAChC,KAAK,CAAC;MACpC8B,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC9B,WAAW,CAAC;MAChD4B,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC/B,KAAK,CAAC;MACpC6B,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC7B,QAAQ,CAAC;MAC1C2B,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC5B,SAAS,CAAC;MAE5C,KAAK,IAAI6B,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIL,SAAS,CAACL,KAAK,CAACP,MAAM,EAAEiB,CAAC,EAAE,EAAE;QAC/CH,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,SAAS,CAACL,KAAK,CAACU,CAAC,CAAC,CAAC;MAC/C;MAEA,IAAI;QACF,MAAM,IAAI,CAACC,aAAa,CAACJ,QAAQ,CAAC;QAClCnC,IAAI,CAACwC,IAAI,CAAC,SAAS,EAAE,kBAAkB,EAAE,SAAS,CAAC;MACrD,EAAE,OAAOC,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDzC,IAAI,CAACwC,IAAI,CAAC,OAAO,EAAE,0BAA0B,EAAE,OAAO,CAAC;MACzD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}