{"ast":null,"code":"import { QrcodeStream } from \"vue-qrcode-reader\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    QrcodeStream\n  },\n  data() {\n    return {\n      reference: null,\n      orderData: null,\n      error: \"\",\n      selectedConstraints: {\n        facingMode: \"environment\"\n      },\n      constraintOptions: [{\n        label: \"Rear camera\",\n        constraints: {\n          facingMode: \"environment\"\n        }\n      }, {\n        label: \"Front camera\",\n        constraints: {\n          facingMode: \"user\"\n        }\n      }],\n      trackFunctionOptions: [{\n        text: \"Nothing (default)\",\n        value: undefined\n      }, {\n        text: \"Outline\",\n        value: this.paintOutline\n      }, {\n        text: \"Centered Text\",\n        value: this.paintCenterText\n      }, {\n        text: \"Bounding Box\",\n        value: this.paintBoundingBox\n      }],\n      trackFunctionSelected: null,\n      barcodeFormats: {\n        qr_code: true\n      }\n    };\n  },\n  computed: {\n    selectedBarcodeFormats() {\n      // Just QR for now\n      return [\"qr_code\"];\n    }\n  },\n  created() {\n    // default highlight mode\n    this.trackFunctionSelected = this.trackFunctionOptions[2]; // Centered Text\n  },\n\n  methods: {\n    async onDecode(ref) {\n      this.reference = ref;\n      console.log(\"Scanned reference:\", ref);\n      try {\n        const res = await axios.get(`http://localhost:4000/api/order/${ref}`);\n        console.log(\"API response:\", res.data);\n        if (res.data && res.data.success) {\n          this.orderData = res.data.order;\n        } else {\n          alert(\"Order not found or error: \" + (res.data.error || \"Unknown\"));\n          this.orderData = null;\n        }\n      } catch (err) {\n        alert(\"Error fetching order: \" + err.message);\n        console.error(err);\n        this.orderData = null;\n      }\n    },\n    onInit(promise) {\n      promise.then(() => {\n        console.log(\"ðŸ“· Camera initialized\");\n        this.error = \"\";\n      }).catch(e => {\n        console.error(\"ðŸš« Camera error:\", e);\n        this.error = e.message || \"Camera initialization failed\";\n      });\n    },\n    onError(err) {\n      this.error = err.message || \"Unknown error\";\n      console.error(\"Error event:\", err);\n    },\n    async onCameraReady() {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoDevices = devices.filter(d => d.kind === \"videoinput\");\n        // Add detected cameras to selection options\n        this.constraintOptions = [{\n          label: \"Rear camera\",\n          constraints: {\n            facingMode: \"environment\"\n          }\n        }, {\n          label: \"Front camera\",\n          constraints: {\n            facingMode: \"user\"\n          }\n        }, ...videoDevices.map(({\n          deviceId,\n          label\n        }) => ({\n          label: `${label || \"Camera\"} (ID: ${deviceId})`,\n          constraints: {\n            deviceId\n          }\n        }))];\n        this.error = \"\";\n      } catch (err) {\n        console.error(\"Failed to enumerate devices\", err);\n        this.error = \"Failed to enumerate devices\";\n      }\n    },\n    // Drawing functions for track\n    paintOutline(detectedCodes, ctx) {\n      for (const detectedCode of detectedCodes) {\n        const [firstPoint, ...otherPoints] = detectedCode.cornerPoints;\n        ctx.strokeStyle = \"red\";\n        ctx.beginPath();\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        for (const {\n          x,\n          y\n        } of otherPoints) {\n          ctx.lineTo(x, y);\n        }\n        ctx.closePath();\n        ctx.stroke();\n      }\n    },\n    paintBoundingBox(detectedCodes, ctx) {\n      for (const detectedCode of detectedCodes) {\n        const {\n          boundingBox: {\n            x,\n            y,\n            width,\n            height\n          }\n        } = detectedCode;\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = \"#007bff\";\n        ctx.strokeRect(x, y, width, height);\n      }\n    },\n    paintCenterText(detectedCodes, ctx) {\n      for (const detectedCode of detectedCodes) {\n        const {\n          boundingBox,\n          rawValue\n        } = detectedCode;\n        const centerX = boundingBox.x + boundingBox.width / 2;\n        const centerY = boundingBox.y + boundingBox.height / 2;\n        const fontSize = Math.max(12, 50 * boundingBox.width / ctx.canvas.width);\n        ctx.font = `bold ${fontSize}px sans-serif`;\n        ctx.textAlign = \"center\";\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = \"#35495e\";\n        ctx.strokeText(rawValue, centerX, centerY);\n        ctx.fillStyle = \"#5cb984\";\n        ctx.fillText(rawValue, centerX, centerY);\n      }\n    }\n  }\n};","map":{"version":3,"names":["QrcodeStream","axios","components","data","reference","orderData","error","selectedConstraints","facingMode","constraintOptions","label","constraints","trackFunctionOptions","text","value","undefined","paintOutline","paintCenterText","paintBoundingBox","trackFunctionSelected","barcodeFormats","qr_code","computed","selectedBarcodeFormats","created","methods","onDecode","ref","console","log","res","get","success","order","alert","err","message","onInit","promise","then","catch","e","onError","onCameraReady","devices","navigator","mediaDevices","enumerateDevices","videoDevices","filter","d","kind","map","deviceId","detectedCodes","ctx","detectedCode","firstPoint","otherPoints","cornerPoints","strokeStyle","beginPath","moveTo","x","y","lineTo","closePath","stroke","boundingBox","width","height","lineWidth","strokeRect","rawValue","centerX","centerY","fontSize","Math","max","canvas","font","textAlign","strokeText","fillStyle","fillText"],"sources":["C:\\Users\\ajib\\OneDrive\\Desktop\\event-ticket\\event-ticket-frontend\\src\\components\\rex.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Camera selection -->\r\n    <p>\r\n      Select Camera:\r\n      <select v-model=\"selectedConstraints\">\r\n        <option v-for=\"option in constraintOptions\" :key=\"option.label\" :value=\"option.constraints\">\r\n          {{ option.label }}\r\n        </option>\r\n      </select>\r\n    </p>\r\n\r\n    <!-- Track function selection -->\r\n    <p>\r\n      Highlight mode:\r\n      <select v-model=\"trackFunctionSelected\">\r\n        <option v-for=\"option in trackFunctionOptions\" :key=\"option.text\" :value=\"option\">\r\n          {{ option.text }}\r\n        </option>\r\n      </select>\r\n    </p>\r\n\r\n    <!-- QR Scanner -->\r\n    <qrcode-stream\r\n      :constraints=\"selectedConstraints\"\r\n      :track=\"trackFunctionSelected.value\"\r\n      :formats=\"selectedBarcodeFormats\"\r\n      @decode=\"onDecode\"\r\n      @init=\"onInit\"\r\n      @error=\"onError\"\r\n      @camera-on=\"onCameraReady\"\r\n    />\r\n\r\n    <!-- Error display -->\r\n    <p v-if=\"error\" style=\"color: red; font-weight: bold;\">Error: {{ error }}</p>\r\n\r\n    <!-- Scanned Reference -->\r\n    <p v-if=\"reference\">Scanned Reference: <strong>{{ reference }}</strong></p>\r\n\r\n    <!-- Order Info -->\r\n    <div v-if=\"orderData\">\r\n      <h3>ðŸŽŸ Order Details</h3>\r\n      <p><strong>Title:</strong> {{ orderData.title }}</p>\r\n      <p><strong>Email:</strong> {{ orderData.contact.email }}</p>\r\n      <p><strong>Phone:</strong> {{ orderData.contact.phone }}</p>\r\n      <p><strong>Price:</strong> â‚¦{{ orderData.price }}</p>\r\n      <ul>\r\n        <li v-for=\"ticket in orderData.tickets\" :key=\"ticket.name\">\r\n          {{ ticket.name }} Ã— {{ ticket.quantity }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { QrcodeStream } from \"vue-qrcode-reader\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  components: { QrcodeStream },\r\n  data() {\r\n    return {\r\n      reference: null,\r\n      orderData: null,\r\n      error: \"\",\r\n      selectedConstraints: { facingMode: \"environment\" },\r\n      constraintOptions: [\r\n        { label: \"Rear camera\", constraints: { facingMode: \"environment\" } },\r\n        { label: \"Front camera\", constraints: { facingMode: \"user\" } }\r\n      ],\r\n      trackFunctionOptions: [\r\n        { text: \"Nothing (default)\", value: undefined },\r\n        { text: \"Outline\", value: this.paintOutline },\r\n        { text: \"Centered Text\", value: this.paintCenterText },\r\n        { text: \"Bounding Box\", value: this.paintBoundingBox }\r\n      ],\r\n      trackFunctionSelected: null,\r\n      barcodeFormats: {\r\n        qr_code: true,\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    selectedBarcodeFormats() {\r\n      // Just QR for now\r\n      return [\"qr_code\"];\r\n    }\r\n  },\r\n  created() {\r\n    // default highlight mode\r\n    this.trackFunctionSelected = this.trackFunctionOptions[2]; // Centered Text\r\n  },\r\n  methods: {\r\n    async onDecode(ref) {\r\n  this.reference = ref;\r\n  console.log(\"Scanned reference:\", ref);\r\n  try {\r\n    const res = await axios.get(`http://localhost:4000/api/order/${ref}`);\r\n    console.log(\"API response:\", res.data);\r\n    if (res.data && res.data.success) {\r\n      this.orderData = res.data.order;\r\n    } else {\r\n      alert(\"Order not found or error: \" + (res.data.error || \"Unknown\"));\r\n      this.orderData = null;\r\n    }\r\n  } catch (err) {\r\n    alert(\"Error fetching order: \" + err.message);\r\n    console.error(err);\r\n    this.orderData = null;\r\n  }\r\n},\r\n\r\n    onInit(promise) {\r\n      promise\r\n        .then(() => {\r\n          console.log(\"ðŸ“· Camera initialized\");\r\n          this.error = \"\";\r\n        })\r\n        .catch(e => {\r\n          console.error(\"ðŸš« Camera error:\", e);\r\n          this.error = e.message || \"Camera initialization failed\";\r\n        });\r\n    },\r\n\r\n    onError(err) {\r\n      this.error = err.message || \"Unknown error\";\r\n      console.error(\"Error event:\", err);\r\n    },\r\n\r\n    async onCameraReady() {\r\n      try {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const videoDevices = devices.filter(d => d.kind === \"videoinput\");\r\n        // Add detected cameras to selection options\r\n        this.constraintOptions = [\r\n          { label: \"Rear camera\", constraints: { facingMode: \"environment\" } },\r\n          { label: \"Front camera\", constraints: { facingMode: \"user\" } },\r\n          ...videoDevices.map(({ deviceId, label }) => ({\r\n            label: `${label || \"Camera\"} (ID: ${deviceId})`,\r\n            constraints: { deviceId }\r\n          }))\r\n        ];\r\n        this.error = \"\";\r\n      } catch (err) {\r\n        console.error(\"Failed to enumerate devices\", err);\r\n        this.error = \"Failed to enumerate devices\";\r\n      }\r\n    },\r\n\r\n    // Drawing functions for track\r\n    paintOutline(detectedCodes, ctx) {\r\n      for (const detectedCode of detectedCodes) {\r\n        const [firstPoint, ...otherPoints] = detectedCode.cornerPoints;\r\n        ctx.strokeStyle = \"red\";\r\n        ctx.beginPath();\r\n        ctx.moveTo(firstPoint.x, firstPoint.y);\r\n        for (const { x, y } of otherPoints) {\r\n          ctx.lineTo(x, y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n      }\r\n    },\r\n\r\n    paintBoundingBox(detectedCodes, ctx) {\r\n      for (const detectedCode of detectedCodes) {\r\n        const { boundingBox: { x, y, width, height } } = detectedCode;\r\n        ctx.lineWidth = 2;\r\n        ctx.strokeStyle = \"#007bff\";\r\n        ctx.strokeRect(x, y, width, height);\r\n      }\r\n    },\r\n\r\n    paintCenterText(detectedCodes, ctx) {\r\n      for (const detectedCode of detectedCodes) {\r\n        const { boundingBox, rawValue } = detectedCode;\r\n        const centerX = boundingBox.x + boundingBox.width / 2;\r\n        const centerY = boundingBox.y + boundingBox.height / 2;\r\n        const fontSize = Math.max(12, (50 * boundingBox.width) / ctx.canvas.width);\r\n        ctx.font = `bold ${fontSize}px sans-serif`;\r\n        ctx.textAlign = \"center\";\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = \"#35495e\";\r\n        ctx.strokeText(rawValue, centerX, centerY);\r\n        ctx.fillStyle = \"#5cb984\";\r\n        ctx.fillText(rawValue, centerX, centerY);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}